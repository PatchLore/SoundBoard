{"ast":null,"code":"import _objectSpread from\"/Users/allendunn/Documents/Stream/stream-soundboard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import trackStorageService from'./trackStorageService';class UnifiedAudioController{constructor(){this.audioElement=null;this.currentTrack=null;this.isPlaying=false;this.volume=50;this.currentTime=0;this.duration=0;this.eventCallbacks={};this.stopListeners=new Map();this.fadeInterval=null;this.settings={volume:0.5,fadeInDuration:2,fadeOutDuration:2,crossfadeDuration:1,duckingEnabled:false,duckingThreshold:-20,duckingAmount:0.5,normalizationEnabled:false,loopEnabled:false,loopCount:1};this.currentLoopCount=0;this.initializeAudioElement();}initializeAudioElement(){// Create hidden audio element\nthis.audioElement=document.createElement('audio');this.audioElement.style.display='none';this.audioElement.preload='metadata';// Set up event listeners\nthis.audioElement.addEventListener('loadedmetadata',this.handleLoadedMetadata.bind(this));this.audioElement.addEventListener('timeupdate',this.handleTimeUpdate.bind(this));this.audioElement.addEventListener('ended',this.handleEnded.bind(this));this.audioElement.addEventListener('error',this.handleError.bind(this));this.audioElement.addEventListener('play',this.handlePlay.bind(this));this.audioElement.addEventListener('pause',this.handlePause.bind(this));// Add to DOM\ndocument.body.appendChild(this.audioElement);// Set initial volume\nthis.setVolume(this.volume);}// Public methods\nasync playTrack(track){let crossfade=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;return new Promise((resolve,reject)=>{if(!this.audioElement){reject(new Error('Audio element not initialized'));return;}// Determine audio source\nconst audioSrc=this.getAudioSource(track);if(!audioSrc){reject(new Error('Track has no valid audio source'));return;}try{// Handle crossfade if enabled\nif(crossfade&&this.isPlaying&&this.currentTrack){this.crossfadeToTrack(track,audioSrc,resolve,reject);}else{// Stop current track and play new one\nif(this.isPlaying){this.stopCurrentTrack();}this.playNewTrack(track,audioSrc,resolve,reject);}}catch(error){reject(error);}});}getAudioSource(track){// Priority: audioUrl (Suno), then fallback to tracks directory\nif(track.audioUrl){return track.audioUrl;}// Fallback to tracks directory based on title\nif(track.title){// Try to match with existing track files\nconst trackTitle=track.title.toLowerCase().replace(/\\s+/g,'');return\"/tracks/\".concat(trackTitle,\".mp3\");}return null;}async playNewTrack(track,audioSrc,resolve,reject){try{// Set new track\nthis.currentTrack=track;this.audioElement.src=audioSrc;this.audioElement.load();// Reset loop counter\nthis.currentLoopCount=0;// Play the track\nawait this.audioElement.play();this.isPlaying=true;this.notifyEventCallbacks('onPlayStateChange',this.isPlaying);this.notifyEventCallbacks('onTrackChange',this.currentTrack);// Start fade in if enabled\nif(this.settings.fadeInDuration>0){this.fadeIn(this.settings.fadeInDuration);}// Update usage tracking\nthis.updateUsageTracking(track);resolve();}catch(error){reject(error);}}async crossfadeToTrack(track,audioSrc,resolve,reject){try{// Create temporary audio element for crossfade\nconst tempAudio=document.createElement('audio');tempAudio.src=audioSrc;tempAudio.volume=0;tempAudio.preload='metadata';// Wait for metadata to load\nawait new Promise(metadataResolve=>{tempAudio.addEventListener('loadedmetadata',()=>metadataResolve());tempAudio.load();});// Start fade out of current track\nthis.fadeOut(this.settings.crossfadeDuration);// Start fade in of new track\ntempAudio.volume=0;await tempAudio.play();// Fade in new track\nthis.fadeInElement(tempAudio,this.settings.crossfadeDuration);// After crossfade duration, switch to new track\nsetTimeout(()=>{// Update current track\nthis.currentTrack=track;this.audioElement.src=audioSrc;this.audioElement.load();this.audioElement.volume=this.volume/100;// Remove temp audio\ntempAudio.remove();// Update usage tracking\nthis.updateUsageTracking(track);resolve();},this.settings.crossfadeDuration*1000);}catch(error){reject(error);}}pause(){if(this.audioElement&&this.isPlaying){this.audioElement.pause();this.isPlaying=false;this.notifyEventCallbacks('onPlayStateChange',this.isPlaying);}}resume(){if(this.audioElement&&!this.isPlaying&&this.currentTrack){this.audioElement.play().then(()=>{this.isPlaying=true;this.notifyEventCallbacks('onPlayStateChange',this.isPlaying);}).catch(error=>{this.notifyEventCallbacks('onError',\"Failed to resume: \".concat(error.message));});}}stop(){this.stopCurrentTrack();}setVolume(volume){this.volume=Math.max(0,Math.min(100,volume));this.settings.volume=this.volume/100;if(this.audioElement){this.audioElement.volume=this.settings.volume;}this.notifyEventCallbacks('onVolumeChange',this.volume);}getVolume(){return this.volume;}seekTo(time){if(this.audioElement&&this.currentTrack){this.audioElement.currentTime=Math.max(0,Math.min(time,this.duration));}}getCurrentState(){return{currentTrack:this.currentTrack,isPlaying:this.isPlaying,volume:this.volume,currentTime:this.currentTime,duration:this.duration,isLooping:this.settings.loopEnabled,loopCount:this.currentLoopCount};}getCurrentTrack(){return this.currentTrack;}isTrackPlaying(){return this.isPlaying;}getCurrentTime(){return this.currentTime;}getDuration(){return this.duration;}// Fade effects\nfadeIn(duration){if(!this.audioElement)return;this.notifyEventCallbacks('onFadeStart','in',duration);const startVolume=0;const endVolume=this.settings.volume;const steps=60;// 60fps\nconst stepDuration=duration/steps;const volumeStep=(endVolume-startVolume)/steps;let currentStep=0;this.audioElement.volume=startVolume;this.fadeInterval=window.setInterval(()=>{currentStep++;this.audioElement.volume=startVolume+volumeStep*currentStep;if(currentStep>=steps){this.audioElement.volume=endVolume;if(this.fadeInterval){clearInterval(this.fadeInterval);this.fadeInterval=null;}this.notifyEventCallbacks('onFadeComplete','in');}},stepDuration*1000);}fadeOut(duration){if(!this.audioElement)return;this.notifyEventCallbacks('onFadeStart','out',duration);const startVolume=this.audioElement.volume;const endVolume=0;const steps=60;// 60fps\nconst stepDuration=duration/steps;const volumeStep=(startVolume-endVolume)/steps;let currentStep=0;this.fadeInterval=window.setInterval(()=>{currentStep++;this.audioElement.volume=startVolume-volumeStep*currentStep;if(currentStep>=steps){this.audioElement.volume=endVolume;if(this.fadeInterval){clearInterval(this.fadeInterval);this.fadeInterval=null;}this.notifyEventCallbacks('onFadeComplete','out');}},stepDuration*1000);}fadeInElement(audioElement,duration){const startVolume=0;const endVolume=this.settings.volume;const steps=60;const stepDuration=duration/steps;const volumeStep=(endVolume-startVolume)/steps;let currentStep=0;audioElement.volume=startVolume;const interval=window.setInterval(()=>{currentStep++;audioElement.volume=startVolume+volumeStep*currentStep;if(currentStep>=steps){audioElement.volume=endVolume;clearInterval(interval);}},stepDuration*1000);}// Loop functionality\nsetLooping(enabled){let count=arguments.length>1&&arguments[1]!==undefined?arguments[1]:-1;this.settings.loopEnabled=enabled;this.settings.loopCount=count;if(this.audioElement){this.audioElement.loop=enabled&&count===-1;// HTML5 audio only supports infinite loops\n}}getLoopSettings(){return{enabled:this.settings.loopEnabled,count:this.settings.loopCount};}// Settings management\ngetSettings(){return _objectSpread({},this.settings);}updateSettings(newSettings){this.settings=_objectSpread(_objectSpread({},this.settings),newSettings);// Apply volume setting immediately\nif(newSettings.volume!==undefined){this.setVolume(newSettings.volume*100);}// Apply loop setting immediately\nif(newSettings.loopEnabled!==undefined||newSettings.loopCount!==undefined){var _newSettings$loopEnab,_newSettings$loopCoun;this.setLooping((_newSettings$loopEnab=newSettings.loopEnabled)!==null&&_newSettings$loopEnab!==void 0?_newSettings$loopEnab:this.settings.loopEnabled,(_newSettings$loopCoun=newSettings.loopCount)!==null&&_newSettings$loopCoun!==void 0?_newSettings$loopCoun:this.settings.loopCount);}}// Event handling\non(event,callback){this.eventCallbacks[event]=callback;}off(event){delete this.eventCallbacks[event];}// Stop listener management (for compatibility with existing code)\nregisterStopListener(trackId,callback){this.stopListeners.set(trackId,callback);}unregisterStopListener(trackId){this.stopListeners.delete(trackId);}// Usage tracking\nupdateUsageTracking(track){try{const updatedTrack=_objectSpread(_objectSpread({},track),{},{usageTracking:_objectSpread(_objectSpread({},track.usageTracking||{usageCount:0}),{},{usageCount:(track.usageTracking&&track.usageTracking.usageCount?track.usageTracking.usageCount:0)+1,lastUsed:new Date()})});// Save to storage\ntrackStorageService.saveTrack(updatedTrack);// Update current track reference\nthis.currentTrack=updatedTrack;}catch(error){console.error('Error updating usage tracking:',error);}}// Private methods\nstopCurrentTrack(){if(this.audioElement){this.audioElement.pause();this.audioElement.currentTime=0;}this.isPlaying=false;this.currentTime=0;// Clear any active fade\nif(this.fadeInterval){clearInterval(this.fadeInterval);this.fadeInterval=null;}// Notify all stop listeners\nthis.stopListeners.forEach(callback=>callback());this.notifyEventCallbacks('onPlayStateChange',this.isPlaying);}handleLoadedMetadata(){if(this.audioElement){this.duration=this.audioElement.duration;}}handleTimeUpdate(){if(this.audioElement){this.currentTime=this.audioElement.currentTime;this.notifyEventCallbacks('onTimeUpdate',this.currentTime);}}handleEnded(){if(this.currentTrack){this.notifyEventCallbacks('onTrackEnd',this.currentTrack);// Handle looping\nif(this.settings.loopEnabled){if(this.settings.loopCount===-1||this.currentLoopCount<this.settings.loopCount){this.currentLoopCount++;if(this.audioElement){this.audioElement.currentTime=0;this.audioElement.play().catch(console.error);}return;}}}this.isPlaying=false;this.currentTime=0;this.currentLoopCount=0;this.notifyEventCallbacks('onPlayStateChange',this.isPlaying);}handleError(){var _this$audioElement,_this$audioElement$er;const errorMessage=((_this$audioElement=this.audioElement)===null||_this$audioElement===void 0?void 0:(_this$audioElement$er=_this$audioElement.error)===null||_this$audioElement$er===void 0?void 0:_this$audioElement$er.message)||'Unknown audio error';this.notifyEventCallbacks('onError',errorMessage);this.isPlaying=false;this.notifyEventCallbacks('onPlayStateChange',this.isPlaying);}handlePlay(){this.isPlaying=true;this.notifyEventCallbacks('onPlayStateChange',this.isPlaying);}handlePause(){this.isPlaying=false;this.notifyEventCallbacks('onPlayStateChange',this.isPlaying);}notifyEventCallbacks(event){const callback=this.eventCallbacks[event];if(callback){try{for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}callback(...args);}catch(error){console.error(\"Error in \".concat(event,\" callback:\"),error);}}}// Cleanup\ndestroy(){if(this.fadeInterval){clearInterval(this.fadeInterval);this.fadeInterval=null;}if(this.audioElement){this.audioElement.pause();this.audioElement.remove();this.audioElement=null;}this.stopListeners.clear();this.eventCallbacks={};}}// Export singleton instance\nconst unifiedAudioController=new UnifiedAudioController();export default unifiedAudioController;export{UnifiedAudioController};","map":{"version":3,"names":["trackStorageService","UnifiedAudioController","constructor","audioElement","currentTrack","isPlaying","volume","currentTime","duration","eventCallbacks","stopListeners","Map","fadeInterval","settings","fadeInDuration","fadeOutDuration","crossfadeDuration","duckingEnabled","duckingThreshold","duckingAmount","normalizationEnabled","loopEnabled","loopCount","currentLoopCount","initializeAudioElement","document","createElement","style","display","preload","addEventListener","handleLoadedMetadata","bind","handleTimeUpdate","handleEnded","handleError","handlePlay","handlePause","body","appendChild","setVolume","playTrack","track","crossfade","arguments","length","undefined","Promise","resolve","reject","Error","audioSrc","getAudioSource","crossfadeToTrack","stopCurrentTrack","playNewTrack","error","audioUrl","title","trackTitle","toLowerCase","replace","concat","src","load","play","notifyEventCallbacks","fadeIn","updateUsageTracking","tempAudio","metadataResolve","fadeOut","fadeInElement","setTimeout","remove","pause","resume","then","catch","message","stop","Math","max","min","getVolume","seekTo","time","getCurrentState","isLooping","getCurrentTrack","isTrackPlaying","getCurrentTime","getDuration","startVolume","endVolume","steps","stepDuration","volumeStep","currentStep","window","setInterval","clearInterval","interval","setLooping","enabled","count","loop","getLoopSettings","getSettings","_objectSpread","updateSettings","newSettings","_newSettings$loopEnab","_newSettings$loopCoun","on","event","callback","off","registerStopListener","trackId","set","unregisterStopListener","delete","updatedTrack","usageTracking","usageCount","lastUsed","Date","saveTrack","console","forEach","_this$audioElement","_this$audioElement$er","errorMessage","_len","args","Array","_key","destroy","clear","unifiedAudioController"],"sources":["/Users/allendunn/Documents/Stream/stream-soundboard/src/services/unifiedAudioController.ts"],"sourcesContent":["import { StreamingTrack } from '../types/track';\nimport trackStorageService from './trackStorageService';\n\nexport interface AudioSettings {\n  volume: number;\n  fadeInDuration: number; // in seconds\n  fadeOutDuration: number; // in seconds\n  crossfadeDuration: number; // in seconds\n  duckingEnabled: boolean;\n  duckingThreshold: number; // dB threshold for ducking\n  duckingAmount: number; // how much to reduce volume (0-1)\n  normalizationEnabled: boolean;\n  loopEnabled: boolean;\n  loopCount: number; // -1 for infinite\n}\n\nexport interface AudioState {\n  currentTrack: StreamingTrack | null;\n  isPlaying: boolean;\n  volume: number;\n  currentTime: number;\n  duration: number;\n  isLooping: boolean;\n  loopCount: number;\n}\n\nexport interface AudioEventCallbacks {\n  onTrackChange?: (track: StreamingTrack | null) => void;\n  onPlayStateChange?: (isPlaying: boolean) => void;\n  onVolumeChange?: (volume: number) => void;\n  onTimeUpdate?: (currentTime: number) => void;\n  onTrackEnd?: (track: StreamingTrack) => void;\n  onError?: (error: string) => void;\n  onFadeStart?: (type: 'in' | 'out', duration: number) => void;\n  onFadeComplete?: (type: 'in' | 'out') => void;\n}\n\nclass UnifiedAudioController {\n  private audioElement: HTMLAudioElement | null = null;\n  private currentTrack: StreamingTrack | null = null;\n  private isPlaying: boolean = false;\n  private volume: number = 50;\n  private currentTime: number = 0;\n  private duration: number = 0;\n  private eventCallbacks: AudioEventCallbacks = {};\n  private stopListeners: Map<string, () => void> = new Map();\n  private fadeInterval: number | null = null;\n  private settings: AudioSettings = {\n    volume: 0.5,\n    fadeInDuration: 2,\n    fadeOutDuration: 2,\n    crossfadeDuration: 1,\n    duckingEnabled: false,\n    duckingThreshold: -20,\n    duckingAmount: 0.5,\n    normalizationEnabled: false,\n    loopEnabled: false,\n    loopCount: 1\n  };\n  private currentLoopCount: number = 0;\n\n  constructor() {\n    this.initializeAudioElement();\n  }\n\n  private initializeAudioElement() {\n    // Create hidden audio element\n    this.audioElement = document.createElement('audio');\n    this.audioElement.style.display = 'none';\n    this.audioElement.preload = 'metadata';\n    \n    // Set up event listeners\n    this.audioElement.addEventListener('loadedmetadata', this.handleLoadedMetadata.bind(this));\n    this.audioElement.addEventListener('timeupdate', this.handleTimeUpdate.bind(this));\n    this.audioElement.addEventListener('ended', this.handleEnded.bind(this));\n    this.audioElement.addEventListener('error', this.handleError.bind(this));\n    this.audioElement.addEventListener('play', this.handlePlay.bind(this));\n    this.audioElement.addEventListener('pause', this.handlePause.bind(this));\n    \n    // Add to DOM\n    document.body.appendChild(this.audioElement);\n    \n    // Set initial volume\n    this.setVolume(this.volume);\n  }\n\n  // Public methods\n  public async playTrack(track: StreamingTrack, crossfade: boolean = false): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (!this.audioElement) {\n        reject(new Error('Audio element not initialized'));\n        return;\n      }\n\n      // Determine audio source\n      const audioSrc = this.getAudioSource(track);\n      if (!audioSrc) {\n        reject(new Error('Track has no valid audio source'));\n        return;\n      }\n\n      try {\n        // Handle crossfade if enabled\n        if (crossfade && this.isPlaying && this.currentTrack) {\n          this.crossfadeToTrack(track, audioSrc, resolve, reject);\n        } else {\n          // Stop current track and play new one\n          if (this.isPlaying) {\n            this.stopCurrentTrack();\n          }\n          this.playNewTrack(track, audioSrc, resolve, reject);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  private getAudioSource(track: StreamingTrack): string | null {\n    // Priority: audioUrl (Suno), then fallback to tracks directory\n    if (track.audioUrl) {\n      return track.audioUrl;\n    }\n    \n    // Fallback to tracks directory based on title\n    if (track.title) {\n      // Try to match with existing track files\n      const trackTitle = track.title.toLowerCase().replace(/\\s+/g, '');\n      return `/tracks/${trackTitle}.mp3`;\n    }\n    \n    return null;\n  }\n\n  private async playNewTrack(track: StreamingTrack, audioSrc: string, resolve: Function, reject: Function) {\n    try {\n      // Set new track\n      this.currentTrack = track;\n      this.audioElement!.src = audioSrc;\n      this.audioElement!.load();\n\n      // Reset loop counter\n      this.currentLoopCount = 0;\n\n      // Play the track\n      await this.audioElement!.play();\n      \n      this.isPlaying = true;\n      this.notifyEventCallbacks('onPlayStateChange', this.isPlaying);\n      this.notifyEventCallbacks('onTrackChange', this.currentTrack);\n      \n      // Start fade in if enabled\n      if (this.settings.fadeInDuration > 0) {\n        this.fadeIn(this.settings.fadeInDuration);\n      }\n\n      // Update usage tracking\n      this.updateUsageTracking(track);\n      \n      resolve();\n    } catch (error) {\n      reject(error);\n    }\n  }\n\n  private async crossfadeToTrack(track: StreamingTrack, audioSrc: string, resolve: Function, reject: Function) {\n    try {\n      // Create temporary audio element for crossfade\n      const tempAudio = document.createElement('audio');\n      tempAudio.src = audioSrc;\n      tempAudio.volume = 0;\n      tempAudio.preload = 'metadata';\n      \n      // Wait for metadata to load\n      await new Promise<void>((metadataResolve) => {\n        tempAudio.addEventListener('loadedmetadata', () => metadataResolve());\n        tempAudio.load();\n      });\n\n      // Start fade out of current track\n      this.fadeOut(this.settings.crossfadeDuration);\n      \n      // Start fade in of new track\n      tempAudio.volume = 0;\n      await tempAudio.play();\n      \n      // Fade in new track\n      this.fadeInElement(tempAudio, this.settings.crossfadeDuration);\n      \n      // After crossfade duration, switch to new track\n      setTimeout(() => {\n        // Update current track\n        this.currentTrack = track;\n        this.audioElement!.src = audioSrc;\n        this.audioElement!.load();\n        this.audioElement!.volume = this.volume / 100;\n        \n        // Remove temp audio\n        tempAudio.remove();\n        \n        // Update usage tracking\n        this.updateUsageTracking(track);\n        \n        resolve();\n      }, this.settings.crossfadeDuration * 1000);\n      \n    } catch (error) {\n      reject(error);\n    }\n  }\n\n  public pause(): void {\n    if (this.audioElement && this.isPlaying) {\n      this.audioElement.pause();\n      this.isPlaying = false;\n      this.notifyEventCallbacks('onPlayStateChange', this.isPlaying);\n    }\n  }\n\n  public resume(): void {\n    if (this.audioElement && !this.isPlaying && this.currentTrack) {\n      this.audioElement.play().then(() => {\n        this.isPlaying = true;\n        this.notifyEventCallbacks('onPlayStateChange', this.isPlaying);\n      }).catch((error) => {\n        this.notifyEventCallbacks('onError', `Failed to resume: ${error.message}`);\n      });\n    }\n  }\n\n  public stop(): void {\n    this.stopCurrentTrack();\n  }\n\n  public setVolume(volume: number): void {\n    this.volume = Math.max(0, Math.min(100, volume));\n    this.settings.volume = this.volume / 100;\n    \n    if (this.audioElement) {\n      this.audioElement.volume = this.settings.volume;\n    }\n    \n    this.notifyEventCallbacks('onVolumeChange', this.volume);\n  }\n\n  public getVolume(): number {\n    return this.volume;\n  }\n\n  public seekTo(time: number): void {\n    if (this.audioElement && this.currentTrack) {\n      this.audioElement.currentTime = Math.max(0, Math.min(time, this.duration));\n    }\n  }\n\n  public getCurrentState(): AudioState {\n    return {\n      currentTrack: this.currentTrack,\n      isPlaying: this.isPlaying,\n      volume: this.volume,\n      currentTime: this.currentTime,\n      duration: this.duration,\n      isLooping: this.settings.loopEnabled,\n      loopCount: this.currentLoopCount\n    };\n  }\n\n  public getCurrentTrack(): StreamingTrack | null {\n    return this.currentTrack;\n  }\n\n  public isTrackPlaying(): boolean {\n    return this.isPlaying;\n  }\n\n  public getCurrentTime(): number {\n    return this.currentTime;\n  }\n\n  public getDuration(): number {\n    return this.duration;\n  }\n\n  // Fade effects\n  public fadeIn(duration: number): void {\n    if (!this.audioElement) return;\n    \n    this.notifyEventCallbacks('onFadeStart', 'in', duration);\n    \n    const startVolume = 0;\n    const endVolume = this.settings.volume;\n    const steps = 60; // 60fps\n    const stepDuration = duration / steps;\n    const volumeStep = (endVolume - startVolume) / steps;\n    \n    let currentStep = 0;\n    this.audioElement.volume = startVolume;\n    \n    this.fadeInterval = window.setInterval(() => {\n      currentStep++;\n      this.audioElement!.volume = startVolume + (volumeStep * currentStep);\n      \n      if (currentStep >= steps) {\n        this.audioElement!.volume = endVolume;\n        if (this.fadeInterval) {\n          clearInterval(this.fadeInterval);\n          this.fadeInterval = null;\n        }\n        this.notifyEventCallbacks('onFadeComplete', 'in');\n      }\n    }, stepDuration * 1000);\n  }\n\n  public fadeOut(duration: number): void {\n    if (!this.audioElement) return;\n    \n    this.notifyEventCallbacks('onFadeStart', 'out', duration);\n    \n    const startVolume = this.audioElement.volume;\n    const endVolume = 0;\n    const steps = 60; // 60fps\n    const stepDuration = duration / steps;\n    const volumeStep = (startVolume - endVolume) / steps;\n    \n    let currentStep = 0;\n    \n    this.fadeInterval = window.setInterval(() => {\n      currentStep++;\n      this.audioElement!.volume = startVolume - (volumeStep * currentStep);\n      \n      if (currentStep >= steps) {\n        this.audioElement!.volume = endVolume;\n        if (this.fadeInterval) {\n          clearInterval(this.fadeInterval);\n          this.fadeInterval = null;\n        }\n        this.notifyEventCallbacks('onFadeComplete', 'out');\n      }\n    }, stepDuration * 1000);\n  }\n\n  private fadeInElement(audioElement: HTMLAudioElement, duration: number): void {\n    const startVolume = 0;\n    const endVolume = this.settings.volume;\n    const steps = 60;\n    const stepDuration = duration / steps;\n    const volumeStep = (endVolume - startVolume) / steps;\n    \n    let currentStep = 0;\n    audioElement.volume = startVolume;\n    \n    const interval = window.setInterval(() => {\n      currentStep++;\n      audioElement.volume = startVolume + (volumeStep * currentStep);\n      \n      if (currentStep >= steps) {\n        audioElement.volume = endVolume;\n        clearInterval(interval);\n      }\n    }, stepDuration * 1000);\n  }\n\n  // Loop functionality\n  public setLooping(enabled: boolean, count: number = -1): void {\n    this.settings.loopEnabled = enabled;\n    this.settings.loopCount = count;\n    \n    if (this.audioElement) {\n      this.audioElement.loop = enabled && count === -1; // HTML5 audio only supports infinite loops\n    }\n  }\n\n  public getLoopSettings(): { enabled: boolean; count: number } {\n    return {\n      enabled: this.settings.loopEnabled,\n      count: this.settings.loopCount\n    };\n  }\n\n  // Settings management\n  public getSettings(): AudioSettings {\n    return { ...this.settings };\n  }\n\n  public updateSettings(newSettings: Partial<AudioSettings>): void {\n    this.settings = { ...this.settings, ...newSettings };\n    \n    // Apply volume setting immediately\n    if (newSettings.volume !== undefined) {\n      this.setVolume(newSettings.volume * 100);\n    }\n    \n    // Apply loop setting immediately\n    if (newSettings.loopEnabled !== undefined || newSettings.loopCount !== undefined) {\n      this.setLooping(\n        newSettings.loopEnabled ?? this.settings.loopEnabled,\n        newSettings.loopCount ?? this.settings.loopCount\n      );\n    }\n  }\n\n  // Event handling\n  public on(event: keyof AudioEventCallbacks, callback: any): void {\n    this.eventCallbacks[event] = callback;\n  }\n\n  public off(event: keyof AudioEventCallbacks): void {\n    delete this.eventCallbacks[event];\n  }\n\n  // Stop listener management (for compatibility with existing code)\n  public registerStopListener(trackId: string, callback: () => void): void {\n    this.stopListeners.set(trackId, callback);\n  }\n\n  public unregisterStopListener(trackId: string): void {\n    this.stopListeners.delete(trackId);\n  }\n\n  // Usage tracking\n  private updateUsageTracking(track: StreamingTrack): void {\n    try {\n      const updatedTrack = {\n        ...track,\n        usageTracking: {\n          ...(track.usageTracking || { usageCount: 0 }),\n          usageCount: ((track.usageTracking && track.usageTracking.usageCount) ? track.usageTracking.usageCount : 0) + 1,\n          lastUsed: new Date()\n        }\n      };\n      \n      // Save to storage\n      trackStorageService.saveTrack(updatedTrack);\n      \n      // Update current track reference\n      this.currentTrack = updatedTrack;\n    } catch (error) {\n      console.error('Error updating usage tracking:', error);\n    }\n  }\n\n  // Private methods\n  private stopCurrentTrack(): void {\n    if (this.audioElement) {\n      this.audioElement.pause();\n      this.audioElement.currentTime = 0;\n    }\n    \n    this.isPlaying = false;\n    this.currentTime = 0;\n    \n    // Clear any active fade\n    if (this.fadeInterval) {\n      clearInterval(this.fadeInterval);\n      this.fadeInterval = null;\n    }\n    \n    // Notify all stop listeners\n    this.stopListeners.forEach(callback => callback());\n    \n    this.notifyEventCallbacks('onPlayStateChange', this.isPlaying);\n  }\n\n  private handleLoadedMetadata(): void {\n    if (this.audioElement) {\n      this.duration = this.audioElement.duration;\n    }\n  }\n\n  private handleTimeUpdate(): void {\n    if (this.audioElement) {\n      this.currentTime = this.audioElement.currentTime;\n      this.notifyEventCallbacks('onTimeUpdate', this.currentTime);\n    }\n  }\n\n  private handleEnded(): void {\n    if (this.currentTrack) {\n      this.notifyEventCallbacks('onTrackEnd', this.currentTrack);\n      \n      // Handle looping\n      if (this.settings.loopEnabled) {\n        if (this.settings.loopCount === -1 || this.currentLoopCount < this.settings.loopCount) {\n          this.currentLoopCount++;\n          if (this.audioElement) {\n            this.audioElement.currentTime = 0;\n            this.audioElement.play().catch(console.error);\n          }\n          return;\n        }\n      }\n    }\n    \n    this.isPlaying = false;\n    this.currentTime = 0;\n    this.currentLoopCount = 0;\n    this.notifyEventCallbacks('onPlayStateChange', this.isPlaying);\n  }\n\n  private handleError(): void {\n    const errorMessage = this.audioElement?.error?.message || 'Unknown audio error';\n    this.notifyEventCallbacks('onError', errorMessage);\n    this.isPlaying = false;\n    this.notifyEventCallbacks('onPlayStateChange', this.isPlaying);\n  }\n\n  private handlePlay(): void {\n    this.isPlaying = true;\n    this.notifyEventCallbacks('onPlayStateChange', this.isPlaying);\n  }\n\n  private handlePause(): void {\n    this.isPlaying = false;\n    this.notifyEventCallbacks('onPlayStateChange', this.isPlaying);\n  }\n\n  private notifyEventCallbacks(event: keyof AudioEventCallbacks, ...args: any[]): void {\n    const callback = this.eventCallbacks[event];\n    if (callback) {\n      try {\n        (callback as Function)(...args);\n      } catch (error) {\n        console.error(`Error in ${event} callback:`, error);\n      }\n    }\n  }\n\n  // Cleanup\n  public destroy(): void {\n    if (this.fadeInterval) {\n      clearInterval(this.fadeInterval);\n      this.fadeInterval = null;\n    }\n    \n    if (this.audioElement) {\n      this.audioElement.pause();\n      this.audioElement.remove();\n      this.audioElement = null;\n    }\n    \n    this.stopListeners.clear();\n    this.eventCallbacks = {};\n  }\n}\n\n// Export singleton instance\nconst unifiedAudioController = new UnifiedAudioController();\nexport default unifiedAudioController;\nexport { UnifiedAudioController };\n"],"mappings":"wIACA,MAAO,CAAAA,mBAAmB,KAAM,uBAAuB,CAoCvD,KAAM,CAAAC,sBAAuB,CAwB3BC,WAAWA,CAAA,CAAG,MAvBNC,YAAY,CAA4B,IAAI,MAC5CC,YAAY,CAA0B,IAAI,MAC1CC,SAAS,CAAY,KAAK,MAC1BC,MAAM,CAAW,EAAE,MACnBC,WAAW,CAAW,CAAC,MACvBC,QAAQ,CAAW,CAAC,MACpBC,cAAc,CAAwB,CAAC,CAAC,MACxCC,aAAa,CAA4B,GAAI,CAAAC,GAAG,CAAC,CAAC,MAClDC,YAAY,CAAkB,IAAI,MAClCC,QAAQ,CAAkB,CAChCP,MAAM,CAAE,GAAG,CACXQ,cAAc,CAAE,CAAC,CACjBC,eAAe,CAAE,CAAC,CAClBC,iBAAiB,CAAE,CAAC,CACpBC,cAAc,CAAE,KAAK,CACrBC,gBAAgB,CAAE,CAAC,EAAE,CACrBC,aAAa,CAAE,GAAG,CAClBC,oBAAoB,CAAE,KAAK,CAC3BC,WAAW,CAAE,KAAK,CAClBC,SAAS,CAAE,CACb,CAAC,MACOC,gBAAgB,CAAW,CAAC,CAGlC,IAAI,CAACC,sBAAsB,CAAC,CAAC,CAC/B,CAEQA,sBAAsBA,CAAA,CAAG,CAC/B;AACA,IAAI,CAACrB,YAAY,CAAGsB,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC,CACnD,IAAI,CAACvB,YAAY,CAACwB,KAAK,CAACC,OAAO,CAAG,MAAM,CACxC,IAAI,CAACzB,YAAY,CAAC0B,OAAO,CAAG,UAAU,CAEtC;AACA,IAAI,CAAC1B,YAAY,CAAC2B,gBAAgB,CAAC,gBAAgB,CAAE,IAAI,CAACC,oBAAoB,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAC1F,IAAI,CAAC7B,YAAY,CAAC2B,gBAAgB,CAAC,YAAY,CAAE,IAAI,CAACG,gBAAgB,CAACD,IAAI,CAAC,IAAI,CAAC,CAAC,CAClF,IAAI,CAAC7B,YAAY,CAAC2B,gBAAgB,CAAC,OAAO,CAAE,IAAI,CAACI,WAAW,CAACF,IAAI,CAAC,IAAI,CAAC,CAAC,CACxE,IAAI,CAAC7B,YAAY,CAAC2B,gBAAgB,CAAC,OAAO,CAAE,IAAI,CAACK,WAAW,CAACH,IAAI,CAAC,IAAI,CAAC,CAAC,CACxE,IAAI,CAAC7B,YAAY,CAAC2B,gBAAgB,CAAC,MAAM,CAAE,IAAI,CAACM,UAAU,CAACJ,IAAI,CAAC,IAAI,CAAC,CAAC,CACtE,IAAI,CAAC7B,YAAY,CAAC2B,gBAAgB,CAAC,OAAO,CAAE,IAAI,CAACO,WAAW,CAACL,IAAI,CAAC,IAAI,CAAC,CAAC,CAExE;AACAP,QAAQ,CAACa,IAAI,CAACC,WAAW,CAAC,IAAI,CAACpC,YAAY,CAAC,CAE5C;AACA,IAAI,CAACqC,SAAS,CAAC,IAAI,CAAClC,MAAM,CAAC,CAC7B,CAEA;AACA,KAAa,CAAAmC,SAASA,CAACC,KAAqB,CAA6C,IAA3C,CAAAC,SAAkB,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,KAAK,CACtE,MAAO,IAAI,CAAAG,OAAO,CAAC,CAACC,OAAO,CAAEC,MAAM,GAAK,CACtC,GAAI,CAAC,IAAI,CAAC9C,YAAY,CAAE,CACtB8C,MAAM,CAAC,GAAI,CAAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC,CAClD,OACF,CAEA;AACA,KAAM,CAAAC,QAAQ,CAAG,IAAI,CAACC,cAAc,CAACV,KAAK,CAAC,CAC3C,GAAI,CAACS,QAAQ,CAAE,CACbF,MAAM,CAAC,GAAI,CAAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC,CACpD,OACF,CAEA,GAAI,CACF;AACA,GAAIP,SAAS,EAAI,IAAI,CAACtC,SAAS,EAAI,IAAI,CAACD,YAAY,CAAE,CACpD,IAAI,CAACiD,gBAAgB,CAACX,KAAK,CAAES,QAAQ,CAAEH,OAAO,CAAEC,MAAM,CAAC,CACzD,CAAC,IAAM,CACL;AACA,GAAI,IAAI,CAAC5C,SAAS,CAAE,CAClB,IAAI,CAACiD,gBAAgB,CAAC,CAAC,CACzB,CACA,IAAI,CAACC,YAAY,CAACb,KAAK,CAAES,QAAQ,CAAEH,OAAO,CAAEC,MAAM,CAAC,CACrD,CACF,CAAE,MAAOO,KAAK,CAAE,CACdP,MAAM,CAACO,KAAK,CAAC,CACf,CACF,CAAC,CAAC,CACJ,CAEQJ,cAAcA,CAACV,KAAqB,CAAiB,CAC3D;AACA,GAAIA,KAAK,CAACe,QAAQ,CAAE,CAClB,MAAO,CAAAf,KAAK,CAACe,QAAQ,CACvB,CAEA;AACA,GAAIf,KAAK,CAACgB,KAAK,CAAE,CACf;AACA,KAAM,CAAAC,UAAU,CAAGjB,KAAK,CAACgB,KAAK,CAACE,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,CAAE,EAAE,CAAC,CAChE,iBAAAC,MAAA,CAAkBH,UAAU,SAC9B,CAEA,MAAO,KAAI,CACb,CAEA,KAAc,CAAAJ,YAAYA,CAACb,KAAqB,CAAES,QAAgB,CAAEH,OAAiB,CAAEC,MAAgB,CAAE,CACvG,GAAI,CACF;AACA,IAAI,CAAC7C,YAAY,CAAGsC,KAAK,CACzB,IAAI,CAACvC,YAAY,CAAE4D,GAAG,CAAGZ,QAAQ,CACjC,IAAI,CAAChD,YAAY,CAAE6D,IAAI,CAAC,CAAC,CAEzB;AACA,IAAI,CAACzC,gBAAgB,CAAG,CAAC,CAEzB;AACA,KAAM,KAAI,CAACpB,YAAY,CAAE8D,IAAI,CAAC,CAAC,CAE/B,IAAI,CAAC5D,SAAS,CAAG,IAAI,CACrB,IAAI,CAAC6D,oBAAoB,CAAC,mBAAmB,CAAE,IAAI,CAAC7D,SAAS,CAAC,CAC9D,IAAI,CAAC6D,oBAAoB,CAAC,eAAe,CAAE,IAAI,CAAC9D,YAAY,CAAC,CAE7D;AACA,GAAI,IAAI,CAACS,QAAQ,CAACC,cAAc,CAAG,CAAC,CAAE,CACpC,IAAI,CAACqD,MAAM,CAAC,IAAI,CAACtD,QAAQ,CAACC,cAAc,CAAC,CAC3C,CAEA;AACA,IAAI,CAACsD,mBAAmB,CAAC1B,KAAK,CAAC,CAE/BM,OAAO,CAAC,CAAC,CACX,CAAE,MAAOQ,KAAK,CAAE,CACdP,MAAM,CAACO,KAAK,CAAC,CACf,CACF,CAEA,KAAc,CAAAH,gBAAgBA,CAACX,KAAqB,CAAES,QAAgB,CAAEH,OAAiB,CAAEC,MAAgB,CAAE,CAC3G,GAAI,CACF;AACA,KAAM,CAAAoB,SAAS,CAAG5C,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC,CACjD2C,SAAS,CAACN,GAAG,CAAGZ,QAAQ,CACxBkB,SAAS,CAAC/D,MAAM,CAAG,CAAC,CACpB+D,SAAS,CAACxC,OAAO,CAAG,UAAU,CAE9B;AACA,KAAM,IAAI,CAAAkB,OAAO,CAAQuB,eAAe,EAAK,CAC3CD,SAAS,CAACvC,gBAAgB,CAAC,gBAAgB,CAAE,IAAMwC,eAAe,CAAC,CAAC,CAAC,CACrED,SAAS,CAACL,IAAI,CAAC,CAAC,CAClB,CAAC,CAAC,CAEF;AACA,IAAI,CAACO,OAAO,CAAC,IAAI,CAAC1D,QAAQ,CAACG,iBAAiB,CAAC,CAE7C;AACAqD,SAAS,CAAC/D,MAAM,CAAG,CAAC,CACpB,KAAM,CAAA+D,SAAS,CAACJ,IAAI,CAAC,CAAC,CAEtB;AACA,IAAI,CAACO,aAAa,CAACH,SAAS,CAAE,IAAI,CAACxD,QAAQ,CAACG,iBAAiB,CAAC,CAE9D;AACAyD,UAAU,CAAC,IAAM,CACf;AACA,IAAI,CAACrE,YAAY,CAAGsC,KAAK,CACzB,IAAI,CAACvC,YAAY,CAAE4D,GAAG,CAAGZ,QAAQ,CACjC,IAAI,CAAChD,YAAY,CAAE6D,IAAI,CAAC,CAAC,CACzB,IAAI,CAAC7D,YAAY,CAAEG,MAAM,CAAG,IAAI,CAACA,MAAM,CAAG,GAAG,CAE7C;AACA+D,SAAS,CAACK,MAAM,CAAC,CAAC,CAElB;AACA,IAAI,CAACN,mBAAmB,CAAC1B,KAAK,CAAC,CAE/BM,OAAO,CAAC,CAAC,CACX,CAAC,CAAE,IAAI,CAACnC,QAAQ,CAACG,iBAAiB,CAAG,IAAI,CAAC,CAE5C,CAAE,MAAOwC,KAAK,CAAE,CACdP,MAAM,CAACO,KAAK,CAAC,CACf,CACF,CAEOmB,KAAKA,CAAA,CAAS,CACnB,GAAI,IAAI,CAACxE,YAAY,EAAI,IAAI,CAACE,SAAS,CAAE,CACvC,IAAI,CAACF,YAAY,CAACwE,KAAK,CAAC,CAAC,CACzB,IAAI,CAACtE,SAAS,CAAG,KAAK,CACtB,IAAI,CAAC6D,oBAAoB,CAAC,mBAAmB,CAAE,IAAI,CAAC7D,SAAS,CAAC,CAChE,CACF,CAEOuE,MAAMA,CAAA,CAAS,CACpB,GAAI,IAAI,CAACzE,YAAY,EAAI,CAAC,IAAI,CAACE,SAAS,EAAI,IAAI,CAACD,YAAY,CAAE,CAC7D,IAAI,CAACD,YAAY,CAAC8D,IAAI,CAAC,CAAC,CAACY,IAAI,CAAC,IAAM,CAClC,IAAI,CAACxE,SAAS,CAAG,IAAI,CACrB,IAAI,CAAC6D,oBAAoB,CAAC,mBAAmB,CAAE,IAAI,CAAC7D,SAAS,CAAC,CAChE,CAAC,CAAC,CAACyE,KAAK,CAAEtB,KAAK,EAAK,CAClB,IAAI,CAACU,oBAAoB,CAAC,SAAS,sBAAAJ,MAAA,CAAuBN,KAAK,CAACuB,OAAO,CAAE,CAAC,CAC5E,CAAC,CAAC,CACJ,CACF,CAEOC,IAAIA,CAAA,CAAS,CAClB,IAAI,CAAC1B,gBAAgB,CAAC,CAAC,CACzB,CAEOd,SAASA,CAAClC,MAAc,CAAQ,CACrC,IAAI,CAACA,MAAM,CAAG2E,IAAI,CAACC,GAAG,CAAC,CAAC,CAAED,IAAI,CAACE,GAAG,CAAC,GAAG,CAAE7E,MAAM,CAAC,CAAC,CAChD,IAAI,CAACO,QAAQ,CAACP,MAAM,CAAG,IAAI,CAACA,MAAM,CAAG,GAAG,CAExC,GAAI,IAAI,CAACH,YAAY,CAAE,CACrB,IAAI,CAACA,YAAY,CAACG,MAAM,CAAG,IAAI,CAACO,QAAQ,CAACP,MAAM,CACjD,CAEA,IAAI,CAAC4D,oBAAoB,CAAC,gBAAgB,CAAE,IAAI,CAAC5D,MAAM,CAAC,CAC1D,CAEO8E,SAASA,CAAA,CAAW,CACzB,MAAO,KAAI,CAAC9E,MAAM,CACpB,CAEO+E,MAAMA,CAACC,IAAY,CAAQ,CAChC,GAAI,IAAI,CAACnF,YAAY,EAAI,IAAI,CAACC,YAAY,CAAE,CAC1C,IAAI,CAACD,YAAY,CAACI,WAAW,CAAG0E,IAAI,CAACC,GAAG,CAAC,CAAC,CAAED,IAAI,CAACE,GAAG,CAACG,IAAI,CAAE,IAAI,CAAC9E,QAAQ,CAAC,CAAC,CAC5E,CACF,CAEO+E,eAAeA,CAAA,CAAe,CACnC,MAAO,CACLnF,YAAY,CAAE,IAAI,CAACA,YAAY,CAC/BC,SAAS,CAAE,IAAI,CAACA,SAAS,CACzBC,MAAM,CAAE,IAAI,CAACA,MAAM,CACnBC,WAAW,CAAE,IAAI,CAACA,WAAW,CAC7BC,QAAQ,CAAE,IAAI,CAACA,QAAQ,CACvBgF,SAAS,CAAE,IAAI,CAAC3E,QAAQ,CAACQ,WAAW,CACpCC,SAAS,CAAE,IAAI,CAACC,gBAClB,CAAC,CACH,CAEOkE,eAAeA,CAAA,CAA0B,CAC9C,MAAO,KAAI,CAACrF,YAAY,CAC1B,CAEOsF,cAAcA,CAAA,CAAY,CAC/B,MAAO,KAAI,CAACrF,SAAS,CACvB,CAEOsF,cAAcA,CAAA,CAAW,CAC9B,MAAO,KAAI,CAACpF,WAAW,CACzB,CAEOqF,WAAWA,CAAA,CAAW,CAC3B,MAAO,KAAI,CAACpF,QAAQ,CACtB,CAEA;AACO2D,MAAMA,CAAC3D,QAAgB,CAAQ,CACpC,GAAI,CAAC,IAAI,CAACL,YAAY,CAAE,OAExB,IAAI,CAAC+D,oBAAoB,CAAC,aAAa,CAAE,IAAI,CAAE1D,QAAQ,CAAC,CAExD,KAAM,CAAAqF,WAAW,CAAG,CAAC,CACrB,KAAM,CAAAC,SAAS,CAAG,IAAI,CAACjF,QAAQ,CAACP,MAAM,CACtC,KAAM,CAAAyF,KAAK,CAAG,EAAE,CAAE;AAClB,KAAM,CAAAC,YAAY,CAAGxF,QAAQ,CAAGuF,KAAK,CACrC,KAAM,CAAAE,UAAU,CAAG,CAACH,SAAS,CAAGD,WAAW,EAAIE,KAAK,CAEpD,GAAI,CAAAG,WAAW,CAAG,CAAC,CACnB,IAAI,CAAC/F,YAAY,CAACG,MAAM,CAAGuF,WAAW,CAEtC,IAAI,CAACjF,YAAY,CAAGuF,MAAM,CAACC,WAAW,CAAC,IAAM,CAC3CF,WAAW,EAAE,CACb,IAAI,CAAC/F,YAAY,CAAEG,MAAM,CAAGuF,WAAW,CAAII,UAAU,CAAGC,WAAY,CAEpE,GAAIA,WAAW,EAAIH,KAAK,CAAE,CACxB,IAAI,CAAC5F,YAAY,CAAEG,MAAM,CAAGwF,SAAS,CACrC,GAAI,IAAI,CAAClF,YAAY,CAAE,CACrByF,aAAa,CAAC,IAAI,CAACzF,YAAY,CAAC,CAChC,IAAI,CAACA,YAAY,CAAG,IAAI,CAC1B,CACA,IAAI,CAACsD,oBAAoB,CAAC,gBAAgB,CAAE,IAAI,CAAC,CACnD,CACF,CAAC,CAAE8B,YAAY,CAAG,IAAI,CAAC,CACzB,CAEOzB,OAAOA,CAAC/D,QAAgB,CAAQ,CACrC,GAAI,CAAC,IAAI,CAACL,YAAY,CAAE,OAExB,IAAI,CAAC+D,oBAAoB,CAAC,aAAa,CAAE,KAAK,CAAE1D,QAAQ,CAAC,CAEzD,KAAM,CAAAqF,WAAW,CAAG,IAAI,CAAC1F,YAAY,CAACG,MAAM,CAC5C,KAAM,CAAAwF,SAAS,CAAG,CAAC,CACnB,KAAM,CAAAC,KAAK,CAAG,EAAE,CAAE;AAClB,KAAM,CAAAC,YAAY,CAAGxF,QAAQ,CAAGuF,KAAK,CACrC,KAAM,CAAAE,UAAU,CAAG,CAACJ,WAAW,CAAGC,SAAS,EAAIC,KAAK,CAEpD,GAAI,CAAAG,WAAW,CAAG,CAAC,CAEnB,IAAI,CAACtF,YAAY,CAAGuF,MAAM,CAACC,WAAW,CAAC,IAAM,CAC3CF,WAAW,EAAE,CACb,IAAI,CAAC/F,YAAY,CAAEG,MAAM,CAAGuF,WAAW,CAAII,UAAU,CAAGC,WAAY,CAEpE,GAAIA,WAAW,EAAIH,KAAK,CAAE,CACxB,IAAI,CAAC5F,YAAY,CAAEG,MAAM,CAAGwF,SAAS,CACrC,GAAI,IAAI,CAAClF,YAAY,CAAE,CACrByF,aAAa,CAAC,IAAI,CAACzF,YAAY,CAAC,CAChC,IAAI,CAACA,YAAY,CAAG,IAAI,CAC1B,CACA,IAAI,CAACsD,oBAAoB,CAAC,gBAAgB,CAAE,KAAK,CAAC,CACpD,CACF,CAAC,CAAE8B,YAAY,CAAG,IAAI,CAAC,CACzB,CAEQxB,aAAaA,CAACrE,YAA8B,CAAEK,QAAgB,CAAQ,CAC5E,KAAM,CAAAqF,WAAW,CAAG,CAAC,CACrB,KAAM,CAAAC,SAAS,CAAG,IAAI,CAACjF,QAAQ,CAACP,MAAM,CACtC,KAAM,CAAAyF,KAAK,CAAG,EAAE,CAChB,KAAM,CAAAC,YAAY,CAAGxF,QAAQ,CAAGuF,KAAK,CACrC,KAAM,CAAAE,UAAU,CAAG,CAACH,SAAS,CAAGD,WAAW,EAAIE,KAAK,CAEpD,GAAI,CAAAG,WAAW,CAAG,CAAC,CACnB/F,YAAY,CAACG,MAAM,CAAGuF,WAAW,CAEjC,KAAM,CAAAS,QAAQ,CAAGH,MAAM,CAACC,WAAW,CAAC,IAAM,CACxCF,WAAW,EAAE,CACb/F,YAAY,CAACG,MAAM,CAAGuF,WAAW,CAAII,UAAU,CAAGC,WAAY,CAE9D,GAAIA,WAAW,EAAIH,KAAK,CAAE,CACxB5F,YAAY,CAACG,MAAM,CAAGwF,SAAS,CAC/BO,aAAa,CAACC,QAAQ,CAAC,CACzB,CACF,CAAC,CAAEN,YAAY,CAAG,IAAI,CAAC,CACzB,CAEA;AACOO,UAAUA,CAACC,OAAgB,CAA4B,IAA1B,CAAAC,KAAa,CAAA7D,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACpD,IAAI,CAAC/B,QAAQ,CAACQ,WAAW,CAAGmF,OAAO,CACnC,IAAI,CAAC3F,QAAQ,CAACS,SAAS,CAAGmF,KAAK,CAE/B,GAAI,IAAI,CAACtG,YAAY,CAAE,CACrB,IAAI,CAACA,YAAY,CAACuG,IAAI,CAAGF,OAAO,EAAIC,KAAK,GAAK,CAAC,CAAC,CAAE;AACpD,CACF,CAEOE,eAAeA,CAAA,CAAwC,CAC5D,MAAO,CACLH,OAAO,CAAE,IAAI,CAAC3F,QAAQ,CAACQ,WAAW,CAClCoF,KAAK,CAAE,IAAI,CAAC5F,QAAQ,CAACS,SACvB,CAAC,CACH,CAEA;AACOsF,WAAWA,CAAA,CAAkB,CAClC,OAAAC,aAAA,IAAY,IAAI,CAAChG,QAAQ,EAC3B,CAEOiG,cAAcA,CAACC,WAAmC,CAAQ,CAC/D,IAAI,CAAClG,QAAQ,CAAAgG,aAAA,CAAAA,aAAA,IAAQ,IAAI,CAAChG,QAAQ,EAAKkG,WAAW,CAAE,CAEpD;AACA,GAAIA,WAAW,CAACzG,MAAM,GAAKwC,SAAS,CAAE,CACpC,IAAI,CAACN,SAAS,CAACuE,WAAW,CAACzG,MAAM,CAAG,GAAG,CAAC,CAC1C,CAEA;AACA,GAAIyG,WAAW,CAAC1F,WAAW,GAAKyB,SAAS,EAAIiE,WAAW,CAACzF,SAAS,GAAKwB,SAAS,CAAE,KAAAkE,qBAAA,CAAAC,qBAAA,CAChF,IAAI,CAACV,UAAU,EAAAS,qBAAA,CACbD,WAAW,CAAC1F,WAAW,UAAA2F,qBAAA,UAAAA,qBAAA,CAAI,IAAI,CAACnG,QAAQ,CAACQ,WAAW,EAAA4F,qBAAA,CACpDF,WAAW,CAACzF,SAAS,UAAA2F,qBAAA,UAAAA,qBAAA,CAAI,IAAI,CAACpG,QAAQ,CAACS,SACzC,CAAC,CACH,CACF,CAEA;AACO4F,EAAEA,CAACC,KAAgC,CAAEC,QAAa,CAAQ,CAC/D,IAAI,CAAC3G,cAAc,CAAC0G,KAAK,CAAC,CAAGC,QAAQ,CACvC,CAEOC,GAAGA,CAACF,KAAgC,CAAQ,CACjD,MAAO,KAAI,CAAC1G,cAAc,CAAC0G,KAAK,CAAC,CACnC,CAEA;AACOG,oBAAoBA,CAACC,OAAe,CAAEH,QAAoB,CAAQ,CACvE,IAAI,CAAC1G,aAAa,CAAC8G,GAAG,CAACD,OAAO,CAAEH,QAAQ,CAAC,CAC3C,CAEOK,sBAAsBA,CAACF,OAAe,CAAQ,CACnD,IAAI,CAAC7G,aAAa,CAACgH,MAAM,CAACH,OAAO,CAAC,CACpC,CAEA;AACQnD,mBAAmBA,CAAC1B,KAAqB,CAAQ,CACvD,GAAI,CACF,KAAM,CAAAiF,YAAY,CAAAd,aAAA,CAAAA,aAAA,IACbnE,KAAK,MACRkF,aAAa,CAAAf,aAAA,CAAAA,aAAA,IACPnE,KAAK,CAACkF,aAAa,EAAI,CAAEC,UAAU,CAAE,CAAE,CAAC,MAC5CA,UAAU,CAAE,CAAEnF,KAAK,CAACkF,aAAa,EAAIlF,KAAK,CAACkF,aAAa,CAACC,UAAU,CAAInF,KAAK,CAACkF,aAAa,CAACC,UAAU,CAAG,CAAC,EAAI,CAAC,CAC9GC,QAAQ,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,EACrB,EACF,CAED;AACA/H,mBAAmB,CAACgI,SAAS,CAACL,YAAY,CAAC,CAE3C;AACA,IAAI,CAACvH,YAAY,CAAGuH,YAAY,CAClC,CAAE,MAAOnE,KAAK,CAAE,CACdyE,OAAO,CAACzE,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACxD,CACF,CAEA;AACQF,gBAAgBA,CAAA,CAAS,CAC/B,GAAI,IAAI,CAACnD,YAAY,CAAE,CACrB,IAAI,CAACA,YAAY,CAACwE,KAAK,CAAC,CAAC,CACzB,IAAI,CAACxE,YAAY,CAACI,WAAW,CAAG,CAAC,CACnC,CAEA,IAAI,CAACF,SAAS,CAAG,KAAK,CACtB,IAAI,CAACE,WAAW,CAAG,CAAC,CAEpB;AACA,GAAI,IAAI,CAACK,YAAY,CAAE,CACrByF,aAAa,CAAC,IAAI,CAACzF,YAAY,CAAC,CAChC,IAAI,CAACA,YAAY,CAAG,IAAI,CAC1B,CAEA;AACA,IAAI,CAACF,aAAa,CAACwH,OAAO,CAACd,QAAQ,EAAIA,QAAQ,CAAC,CAAC,CAAC,CAElD,IAAI,CAAClD,oBAAoB,CAAC,mBAAmB,CAAE,IAAI,CAAC7D,SAAS,CAAC,CAChE,CAEQ0B,oBAAoBA,CAAA,CAAS,CACnC,GAAI,IAAI,CAAC5B,YAAY,CAAE,CACrB,IAAI,CAACK,QAAQ,CAAG,IAAI,CAACL,YAAY,CAACK,QAAQ,CAC5C,CACF,CAEQyB,gBAAgBA,CAAA,CAAS,CAC/B,GAAI,IAAI,CAAC9B,YAAY,CAAE,CACrB,IAAI,CAACI,WAAW,CAAG,IAAI,CAACJ,YAAY,CAACI,WAAW,CAChD,IAAI,CAAC2D,oBAAoB,CAAC,cAAc,CAAE,IAAI,CAAC3D,WAAW,CAAC,CAC7D,CACF,CAEQ2B,WAAWA,CAAA,CAAS,CAC1B,GAAI,IAAI,CAAC9B,YAAY,CAAE,CACrB,IAAI,CAAC8D,oBAAoB,CAAC,YAAY,CAAE,IAAI,CAAC9D,YAAY,CAAC,CAE1D;AACA,GAAI,IAAI,CAACS,QAAQ,CAACQ,WAAW,CAAE,CAC7B,GAAI,IAAI,CAACR,QAAQ,CAACS,SAAS,GAAK,CAAC,CAAC,EAAI,IAAI,CAACC,gBAAgB,CAAG,IAAI,CAACV,QAAQ,CAACS,SAAS,CAAE,CACrF,IAAI,CAACC,gBAAgB,EAAE,CACvB,GAAI,IAAI,CAACpB,YAAY,CAAE,CACrB,IAAI,CAACA,YAAY,CAACI,WAAW,CAAG,CAAC,CACjC,IAAI,CAACJ,YAAY,CAAC8D,IAAI,CAAC,CAAC,CAACa,KAAK,CAACmD,OAAO,CAACzE,KAAK,CAAC,CAC/C,CACA,OACF,CACF,CACF,CAEA,IAAI,CAACnD,SAAS,CAAG,KAAK,CACtB,IAAI,CAACE,WAAW,CAAG,CAAC,CACpB,IAAI,CAACgB,gBAAgB,CAAG,CAAC,CACzB,IAAI,CAAC2C,oBAAoB,CAAC,mBAAmB,CAAE,IAAI,CAAC7D,SAAS,CAAC,CAChE,CAEQ8B,WAAWA,CAAA,CAAS,KAAAgG,kBAAA,CAAAC,qBAAA,CAC1B,KAAM,CAAAC,YAAY,CAAG,EAAAF,kBAAA,KAAI,CAAChI,YAAY,UAAAgI,kBAAA,kBAAAC,qBAAA,CAAjBD,kBAAA,CAAmB3E,KAAK,UAAA4E,qBAAA,iBAAxBA,qBAAA,CAA0BrD,OAAO,GAAI,qBAAqB,CAC/E,IAAI,CAACb,oBAAoB,CAAC,SAAS,CAAEmE,YAAY,CAAC,CAClD,IAAI,CAAChI,SAAS,CAAG,KAAK,CACtB,IAAI,CAAC6D,oBAAoB,CAAC,mBAAmB,CAAE,IAAI,CAAC7D,SAAS,CAAC,CAChE,CAEQ+B,UAAUA,CAAA,CAAS,CACzB,IAAI,CAAC/B,SAAS,CAAG,IAAI,CACrB,IAAI,CAAC6D,oBAAoB,CAAC,mBAAmB,CAAE,IAAI,CAAC7D,SAAS,CAAC,CAChE,CAEQgC,WAAWA,CAAA,CAAS,CAC1B,IAAI,CAAChC,SAAS,CAAG,KAAK,CACtB,IAAI,CAAC6D,oBAAoB,CAAC,mBAAmB,CAAE,IAAI,CAAC7D,SAAS,CAAC,CAChE,CAEQ6D,oBAAoBA,CAACiD,KAAgC,CAAwB,CACnF,KAAM,CAAAC,QAAQ,CAAG,IAAI,CAAC3G,cAAc,CAAC0G,KAAK,CAAC,CAC3C,GAAIC,QAAQ,CAAE,CACZ,GAAI,SAAAkB,IAAA,CAAA1F,SAAA,CAAAC,MAAA,CAH0D0F,IAAI,KAAAC,KAAA,CAAAF,IAAA,GAAAA,IAAA,MAAAG,IAAA,GAAAA,IAAA,CAAAH,IAAA,CAAAG,IAAA,IAAJF,IAAI,CAAAE,IAAA,IAAA7F,SAAA,CAAA6F,IAAA,GAI/DrB,QAAQ,CAAc,GAAGmB,IAAI,CAAC,CACjC,CAAE,MAAO/E,KAAK,CAAE,CACdyE,OAAO,CAACzE,KAAK,aAAAM,MAAA,CAAaqD,KAAK,eAAc3D,KAAK,CAAC,CACrD,CACF,CACF,CAEA;AACOkF,OAAOA,CAAA,CAAS,CACrB,GAAI,IAAI,CAAC9H,YAAY,CAAE,CACrByF,aAAa,CAAC,IAAI,CAACzF,YAAY,CAAC,CAChC,IAAI,CAACA,YAAY,CAAG,IAAI,CAC1B,CAEA,GAAI,IAAI,CAACT,YAAY,CAAE,CACrB,IAAI,CAACA,YAAY,CAACwE,KAAK,CAAC,CAAC,CACzB,IAAI,CAACxE,YAAY,CAACuE,MAAM,CAAC,CAAC,CAC1B,IAAI,CAACvE,YAAY,CAAG,IAAI,CAC1B,CAEA,IAAI,CAACO,aAAa,CAACiI,KAAK,CAAC,CAAC,CAC1B,IAAI,CAAClI,cAAc,CAAG,CAAC,CAAC,CAC1B,CACF,CAEA;AACA,KAAM,CAAAmI,sBAAsB,CAAG,GAAI,CAAA3I,sBAAsB,CAAC,CAAC,CAC3D,cAAe,CAAA2I,sBAAsB,CACrC,OAAS3I,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"class SunoAudioController{constructor(){this.audioElement=null;this.currentTrack=null;this.isPlaying=false;this.volume=50;this.currentTime=0;this.duration=0;this.eventCallbacks={};this.stopListeners=new Map();this.initializeAudioElement();}initializeAudioElement(){// Create hidden audio element\nthis.audioElement=document.createElement('audio');this.audioElement.style.display='none';this.audioElement.preload='metadata';// Set up event listeners\nthis.audioElement.addEventListener('loadedmetadata',this.handleLoadedMetadata.bind(this));this.audioElement.addEventListener('timeupdate',this.handleTimeUpdate.bind(this));this.audioElement.addEventListener('ended',this.handleEnded.bind(this));this.audioElement.addEventListener('error',this.handleError.bind(this));this.audioElement.addEventListener('play',this.handlePlay.bind(this));this.audioElement.addEventListener('pause',this.handlePause.bind(this));// Add to DOM\ndocument.body.appendChild(this.audioElement);}// Public methods\nplayTrack(track){return new Promise((resolve,reject)=>{if(!this.audioElement){reject(new Error('Audio element not initialized'));return;}if(!track.audioUrl){reject(new Error('Track has no audio URL'));return;}try{// Stop current track if playing\nif(this.isPlaying){this.stopCurrentTrack();}// Set new track\nthis.currentTrack=track;this.audioElement.src=track.audioUrl;this.audioElement.load();// Play the track\nthis.audioElement.play().then(()=>{this.isPlaying=true;this.notifyEventCallbacks('onPlayStateChange',this.isPlaying);this.notifyEventCallbacks('onTrackChange',this.currentTrack);resolve();}).catch(reject);}catch(error){reject(error);}});}pause(){if(this.audioElement&&this.isPlaying){this.audioElement.pause();this.isPlaying=false;this.notifyEventCallbacks('onPlayStateChange',this.isPlaying);}}resume(){if(this.audioElement&&!this.isPlaying&&this.currentTrack){this.audioElement.play().then(()=>{this.isPlaying=true;this.notifyEventCallbacks('onPlayStateChange',this.isPlaying);}).catch(error=>{this.notifyEventCallbacks('onError',\"Failed to resume: \".concat(error.message));});}}stop(){this.stopCurrentTrack();}setVolume(volume){this.volume=Math.max(0,Math.min(100,volume));if(this.audioElement){this.audioElement.volume=this.volume/100;}this.notifyEventCallbacks('onVolumeChange',this.volume);}seekTo(time){if(this.audioElement&&this.currentTrack){this.audioElement.currentTime=Math.max(0,Math.min(time,this.duration));}}getCurrentState(){return{currentTrack:this.currentTrack,isPlaying:this.isPlaying,volume:this.volume,currentTime:this.currentTime,duration:this.duration};}getCurrentTrack(){return this.currentTrack;}isTrackPlaying(){return this.isPlaying;}getVolume(){return this.volume;}getCurrentTime(){return this.currentTime;}getDuration(){return this.duration;}// Event handling\non(event,callback){this.eventCallbacks[event]=callback;}off(event){delete this.eventCallbacks[event];}// Stop listener management (for compatibility with existing code)\nregisterStopListener(trackId,callback){this.stopListeners.set(trackId,callback);}unregisterStopListener(trackId){this.stopListeners.delete(trackId);}// Private methods\nstopCurrentTrack(){if(this.audioElement){this.audioElement.pause();this.audioElement.currentTime=0;}this.isPlaying=false;this.currentTime=0;// Notify all stop listeners\nthis.stopListeners.forEach(callback=>callback());this.notifyEventCallbacks('onPlayStateChange',this.isPlaying);}handleLoadedMetadata(){if(this.audioElement){this.duration=this.audioElement.duration;}}handleTimeUpdate(){if(this.audioElement){this.currentTime=this.audioElement.currentTime;this.notifyEventCallbacks('onTimeUpdate',this.currentTime);}}handleEnded(){if(this.currentTrack){this.notifyEventCallbacks('onTrackEnd',this.currentTrack);}this.isPlaying=false;this.currentTime=0;this.notifyEventCallbacks('onPlayStateChange',this.isPlaying);}handleError(){var _this$audioElement,_this$audioElement$er;const errorMessage=((_this$audioElement=this.audioElement)===null||_this$audioElement===void 0?void 0:(_this$audioElement$er=_this$audioElement.error)===null||_this$audioElement$er===void 0?void 0:_this$audioElement$er.message)||'Unknown audio error';this.notifyEventCallbacks('onError',errorMessage);this.isPlaying=false;this.notifyEventCallbacks('onPlayStateChange',this.isPlaying);}handlePlay(){this.isPlaying=true;this.notifyEventCallbacks('onPlayStateChange',this.isPlaying);}handlePause(){this.isPlaying=false;this.notifyEventCallbacks('onPlayStateChange',this.isPlaying);}notifyEventCallbacks(event,data){const callback=this.eventCallbacks[event];if(callback){try{callback(data);}catch(error){console.error(\"Error in \".concat(event,\" callback:\"),error);}}}// Cleanup\ndestroy(){if(this.audioElement){this.audioElement.pause();this.audioElement.remove();this.audioElement=null;}this.stopListeners.clear();this.eventCallbacks={};}}// Export singleton instance\nconst sunoAudioController=new SunoAudioController();export default sunoAudioController;","map":{"version":3,"names":["SunoAudioController","constructor","audioElement","currentTrack","isPlaying","volume","currentTime","duration","eventCallbacks","stopListeners","Map","initializeAudioElement","document","createElement","style","display","preload","addEventListener","handleLoadedMetadata","bind","handleTimeUpdate","handleEnded","handleError","handlePlay","handlePause","body","appendChild","playTrack","track","Promise","resolve","reject","Error","audioUrl","stopCurrentTrack","src","load","play","then","notifyEventCallbacks","catch","error","pause","resume","concat","message","stop","setVolume","Math","max","min","seekTo","time","getCurrentState","getCurrentTrack","isTrackPlaying","getVolume","getCurrentTime","getDuration","on","event","callback","off","registerStopListener","trackId","set","unregisterStopListener","delete","forEach","_this$audioElement","_this$audioElement$er","errorMessage","data","console","destroy","remove","clear","sunoAudioController"],"sources":["/Users/allendunn/Documents/Stream/stream-soundboard/src/services/sunoAudioController.ts"],"sourcesContent":["import { StreamingTrack } from '../types/track';\n\ninterface AudioState {\n  currentTrack: StreamingTrack | null;\n  isPlaying: boolean;\n  volume: number;\n  currentTime: number;\n  duration: number;\n}\n\ninterface AudioEventCallbacks {\n  onTrackChange?: (track: StreamingTrack | null) => void;\n  onPlayStateChange?: (isPlaying: boolean) => void;\n  onVolumeChange?: (volume: number) => void;\n  onTimeUpdate?: (currentTime: number) => void;\n  onTrackEnd?: (track: StreamingTrack) => void;\n  onError?: (error: string) => void;\n}\n\nclass SunoAudioController {\n  private audioElement: HTMLAudioElement | null = null;\n  private currentTrack: StreamingTrack | null = null;\n  private isPlaying: boolean = false;\n  private volume: number = 50;\n  private currentTime: number = 0;\n  private duration: number = 0;\n  private eventCallbacks: AudioEventCallbacks = {};\n  private stopListeners: Map<string, () => void> = new Map();\n\n  constructor() {\n    this.initializeAudioElement();\n  }\n\n  private initializeAudioElement() {\n    // Create hidden audio element\n    this.audioElement = document.createElement('audio');\n    this.audioElement.style.display = 'none';\n    this.audioElement.preload = 'metadata';\n    \n    // Set up event listeners\n    this.audioElement.addEventListener('loadedmetadata', this.handleLoadedMetadata.bind(this));\n    this.audioElement.addEventListener('timeupdate', this.handleTimeUpdate.bind(this));\n    this.audioElement.addEventListener('ended', this.handleEnded.bind(this));\n    this.audioElement.addEventListener('error', this.handleError.bind(this));\n    this.audioElement.addEventListener('play', this.handlePlay.bind(this));\n    this.audioElement.addEventListener('pause', this.handlePause.bind(this));\n    \n    // Add to DOM\n    document.body.appendChild(this.audioElement);\n  }\n\n  // Public methods\n  public playTrack(track: StreamingTrack): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (!this.audioElement) {\n        reject(new Error('Audio element not initialized'));\n        return;\n      }\n\n      if (!track.audioUrl) {\n        reject(new Error('Track has no audio URL'));\n        return;\n      }\n\n      try {\n        // Stop current track if playing\n        if (this.isPlaying) {\n          this.stopCurrentTrack();\n        }\n\n        // Set new track\n        this.currentTrack = track;\n        this.audioElement.src = track.audioUrl;\n        this.audioElement.load();\n\n        // Play the track\n        this.audioElement.play().then(() => {\n          this.isPlaying = true;\n          this.notifyEventCallbacks('onPlayStateChange', this.isPlaying);\n          this.notifyEventCallbacks('onTrackChange', this.currentTrack);\n          resolve();\n        }).catch(reject);\n\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  public pause(): void {\n    if (this.audioElement && this.isPlaying) {\n      this.audioElement.pause();\n      this.isPlaying = false;\n      this.notifyEventCallbacks('onPlayStateChange', this.isPlaying);\n    }\n  }\n\n  public resume(): void {\n    if (this.audioElement && !this.isPlaying && this.currentTrack) {\n      this.audioElement.play().then(() => {\n        this.isPlaying = true;\n        this.notifyEventCallbacks('onPlayStateChange', this.isPlaying);\n      }).catch((error) => {\n        this.notifyEventCallbacks('onError', `Failed to resume: ${error.message}`);\n      });\n    }\n  }\n\n  public stop(): void {\n    this.stopCurrentTrack();\n  }\n\n  public setVolume(volume: number): void {\n    this.volume = Math.max(0, Math.min(100, volume));\n    if (this.audioElement) {\n      this.audioElement.volume = this.volume / 100;\n    }\n    this.notifyEventCallbacks('onVolumeChange', this.volume);\n  }\n\n  public seekTo(time: number): void {\n    if (this.audioElement && this.currentTrack) {\n      this.audioElement.currentTime = Math.max(0, Math.min(time, this.duration));\n    }\n  }\n\n  public getCurrentState(): AudioState {\n    return {\n      currentTrack: this.currentTrack,\n      isPlaying: this.isPlaying,\n      volume: this.volume,\n      currentTime: this.currentTime,\n      duration: this.duration\n    };\n  }\n\n  public getCurrentTrack(): StreamingTrack | null {\n    return this.currentTrack;\n  }\n\n  public isTrackPlaying(): boolean {\n    return this.isPlaying;\n  }\n\n  public getVolume(): number {\n    return this.volume;\n  }\n\n  public getCurrentTime(): number {\n    return this.currentTime;\n  }\n\n  public getDuration(): number {\n    return this.duration;\n  }\n\n  // Event handling\n  public on(event: keyof AudioEventCallbacks, callback: any): void {\n    this.eventCallbacks[event] = callback;\n  }\n\n  public off(event: keyof AudioEventCallbacks): void {\n    delete this.eventCallbacks[event];\n  }\n\n  // Stop listener management (for compatibility with existing code)\n  public registerStopListener(trackId: string, callback: () => void): void {\n    this.stopListeners.set(trackId, callback);\n  }\n\n  public unregisterStopListener(trackId: string): void {\n    this.stopListeners.delete(trackId);\n  }\n\n  // Private methods\n  private stopCurrentTrack(): void {\n    if (this.audioElement) {\n      this.audioElement.pause();\n      this.audioElement.currentTime = 0;\n    }\n    this.isPlaying = false;\n    this.currentTime = 0;\n    \n    // Notify all stop listeners\n    this.stopListeners.forEach(callback => callback());\n    \n    this.notifyEventCallbacks('onPlayStateChange', this.isPlaying);\n  }\n\n  private handleLoadedMetadata(): void {\n    if (this.audioElement) {\n      this.duration = this.audioElement.duration;\n    }\n  }\n\n  private handleTimeUpdate(): void {\n    if (this.audioElement) {\n      this.currentTime = this.audioElement.currentTime;\n      this.notifyEventCallbacks('onTimeUpdate', this.currentTime);\n    }\n  }\n\n  private handleEnded(): void {\n    if (this.currentTrack) {\n      this.notifyEventCallbacks('onTrackEnd', this.currentTrack);\n    }\n    this.isPlaying = false;\n    this.currentTime = 0;\n    this.notifyEventCallbacks('onPlayStateChange', this.isPlaying);\n  }\n\n  private handleError(): void {\n    const errorMessage = this.audioElement?.error?.message || 'Unknown audio error';\n    this.notifyEventCallbacks('onError', errorMessage);\n    this.isPlaying = false;\n    this.notifyEventCallbacks('onPlayStateChange', this.isPlaying);\n  }\n\n  private handlePlay(): void {\n    this.isPlaying = true;\n    this.notifyEventCallbacks('onPlayStateChange', this.isPlaying);\n  }\n\n  private handlePause(): void {\n    this.isPlaying = false;\n    this.notifyEventCallbacks('onPlayStateChange', this.isPlaying);\n  }\n\n  private notifyEventCallbacks(event: keyof AudioEventCallbacks, data: any): void {\n    const callback = this.eventCallbacks[event];\n    if (callback) {\n      try {\n        (callback as Function)(data);\n      } catch (error) {\n        console.error(`Error in ${event} callback:`, error);\n      }\n    }\n  }\n\n  // Cleanup\n  public destroy(): void {\n    if (this.audioElement) {\n      this.audioElement.pause();\n      this.audioElement.remove();\n      this.audioElement = null;\n    }\n    this.stopListeners.clear();\n    this.eventCallbacks = {};\n  }\n}\n\n// Export singleton instance\nconst sunoAudioController = new SunoAudioController();\nexport default sunoAudioController;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
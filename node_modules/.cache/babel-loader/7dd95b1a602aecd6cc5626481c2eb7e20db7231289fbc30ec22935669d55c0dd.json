{"ast":null,"code":"import _objectSpread from\"/Users/allendunn/Documents/Stream/stream-soundboard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Audio controller service to manage track playback\nclass AudioController{constructor(){this.currentPlayingTrackId=null;this.listeners=new Map();this.volume=0.5;this.isPlaying=false;this.settings={volume:0.5,fadeInDuration:2,fadeOutDuration:2,crossfadeDuration:1,duckingEnabled:false,duckingThreshold:-20,duckingAmount:0.5,normalizationEnabled:false,loopEnabled:false,loopCount:1};this.hotkeys=new Map();this.eventListeners=new Map();}// Set the currently playing track\nsetPlayingTrack(trackId){console.log('🎵 AudioController: Setting playing track to:',trackId);// Stop any previously playing track (but not the current one)\nif(this.currentPlayingTrackId&&this.currentPlayingTrackId!==trackId){console.log('🎵 AudioController: Stopping previous track:',this.currentPlayingTrackId);this.stopTrack(this.currentPlayingTrackId);}this.currentPlayingTrackId=trackId;this.isPlaying=true;this.emit('trackStarted',trackId);console.log('🎵 AudioController: Now playing track:',trackId);}// Stop a specific track\nstopTrack(trackId){console.log('🎵 AudioController: Stop track called for:',trackId);// Only stop if this is the currently playing track\nif(this.currentPlayingTrackId===trackId){console.log('🎵 AudioController: Stopping currently playing track:',trackId);this.currentPlayingTrackId=null;this.isPlaying=false;// Notify listeners that this track should stop\nconst listener=this.listeners.get(trackId);if(listener){listener();}}else{console.log('🎵 AudioController: Track not currently playing, ignoring stop:',trackId);}console.log('🎵 AudioController: Stop track completed for:',trackId);}// Stop all tracks\nstopAllTracks(){this.currentPlayingTrackId=null;this.isPlaying=false;this.listeners.forEach(listener=>listener());this.emit('stopped');console.log('🎵 Stopped all tracks');}// Get currently playing track\ngetCurrentPlayingTrack(){return this.currentPlayingTrackId;}// Register a stop listener for a track\nregisterStopListener(trackId,callback){this.listeners.set(trackId,callback);}// Unregister a stop listener\nunregisterStopListener(trackId){this.listeners.delete(trackId);}// Check if a track is currently playing\nisTrackPlaying(trackId){return this.currentPlayingTrackId===trackId;}// Volume control\nsetVolume(volume){this.volume=Math.max(0,Math.min(1,volume));this.settings.volume=this.volume;this.emit('volumeChanged',this.volume);console.log('🔊 Volume set to:',this.volume);}getVolume(){return this.volume;}// Playback control\npause(){this.isPlaying=false;this.emit('paused');console.log('⏸️ Audio paused');}resume(){this.isPlaying=true;this.emit('resumed');console.log('▶️ Audio resumed');}stop(){this.stopAllTracks();}// Track playback\nasync playTrack(track){let crossfade=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;this.setPlayingTrack(track.id);console.log('🎵 Playing track:',track.title,'crossfade:',crossfade);}// Fade effects\nfadeIn(duration){console.log('🔊 Fading in over',duration,'seconds');this.emit('fadeIn',duration);}fadeOut(duration){console.log('🔊 Fading out over',duration,'seconds');this.emit('fadeOut',duration);}// Settings management\ngetSettings(){return _objectSpread({},this.settings);}enableDucking(enabled){this.settings.duckingEnabled=enabled;console.log('🔊 Ducking enabled:',enabled);}setDuckingThreshold(threshold){this.settings.duckingThreshold=threshold;console.log('🔊 Ducking threshold set to:',threshold);}setDuckingAmount(amount){this.settings.duckingAmount=amount;console.log('🔊 Ducking amount set to:',amount);}enableNormalization(enabled){this.settings.normalizationEnabled=enabled;console.log('🔊 Normalization enabled:',enabled);}setLooping(enabled,count){this.settings.loopEnabled=enabled;this.settings.loopCount=count;console.log('🔊 Looping set to:',enabled,'count:',count);}// Hotkey management\ngetHotkeys(){return new Map(this.hotkeys);}addHotkey(config){this.hotkeys.set(config.key,config);console.log('⌨️ Hotkey added:',config);}removeHotkey(key){this.hotkeys.delete(key);console.log('⌨️ Hotkey removed:',key);}enableHotkeys(enabled){console.log('⌨️ Hotkeys enabled:',enabled);}// Status methods\ngetIsPlaying(){return this.isPlaying;}getCurrentTrack(){// This would need to be implemented to return the actual track object\nreturn null;}// Event system\non(event,callback){if(!this.eventListeners.has(event)){this.eventListeners.set(event,[]);}this.eventListeners.get(event).push(callback);}off(event,callback){const listeners=this.eventListeners.get(event);if(listeners){const index=listeners.indexOf(callback);if(index>-1){listeners.splice(index,1);}}}emit(event){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}const listeners=this.eventListeners.get(event);if(listeners){listeners.forEach(callback=>callback(...args));}}}// Create singleton instance\nexport const audioController=new AudioController();export default audioController;","map":{"version":3,"names":["AudioController","constructor","currentPlayingTrackId","listeners","Map","volume","isPlaying","settings","fadeInDuration","fadeOutDuration","crossfadeDuration","duckingEnabled","duckingThreshold","duckingAmount","normalizationEnabled","loopEnabled","loopCount","hotkeys","eventListeners","setPlayingTrack","trackId","console","log","stopTrack","emit","listener","get","stopAllTracks","forEach","getCurrentPlayingTrack","registerStopListener","callback","set","unregisterStopListener","delete","isTrackPlaying","setVolume","Math","max","min","getVolume","pause","resume","stop","playTrack","track","crossfade","arguments","length","undefined","id","title","fadeIn","duration","fadeOut","getSettings","_objectSpread","enableDucking","enabled","setDuckingThreshold","threshold","setDuckingAmount","amount","enableNormalization","setLooping","count","getHotkeys","addHotkey","config","key","removeHotkey","enableHotkeys","getIsPlaying","getCurrentTrack","on","event","has","push","off","index","indexOf","splice","_len","args","Array","_key","audioController"],"sources":["/Users/allendunn/Documents/Stream/stream-soundboard/src/services/audioController.ts"],"sourcesContent":["import { StreamingTrack } from '../types/track';\n\nexport interface AudioSettings {\n  volume: number;\n  fadeInDuration: number; // in seconds\n  fadeOutDuration: number; // in seconds\n  crossfadeDuration: number; // in seconds\n  duckingEnabled: boolean;\n  duckingThreshold: number; // dB threshold for ducking\n  duckingAmount: number; // how much to reduce volume (0-1)\n  normalizationEnabled: boolean;\n  loopEnabled: boolean;\n  loopCount: number; // -1 for infinite\n}\n\nexport interface HotkeyConfig {\n  key: string;\n  ctrl?: boolean;\n  shift?: boolean;\n  alt?: boolean;\n  action: 'play' | 'pause' | 'next' | 'previous' | 'volume_up' | 'volume_down' | 'mute' | 'duck';\n  trackId?: string;\n}\n\n// Audio controller service to manage track playback\nclass AudioController {\n  private currentPlayingTrackId: string | null = null;\n  private listeners: Map<string, () => void> = new Map();\n  private volume: number = 0.5;\n  private isPlaying: boolean = false;\n  private settings: AudioSettings = {\n    volume: 0.5,\n    fadeInDuration: 2,\n    fadeOutDuration: 2,\n    crossfadeDuration: 1,\n    duckingEnabled: false,\n    duckingThreshold: -20,\n    duckingAmount: 0.5,\n    normalizationEnabled: false,\n    loopEnabled: false,\n    loopCount: 1\n  };\n  private hotkeys: Map<string, HotkeyConfig> = new Map();\n  private eventListeners: Map<string, Function[]> = new Map();\n\n  // Set the currently playing track\n  setPlayingTrack(trackId: string) {\n    console.log('🎵 AudioController: Setting playing track to:', trackId);\n    \n    // Stop any previously playing track (but not the current one)\n    if (this.currentPlayingTrackId && this.currentPlayingTrackId !== trackId) {\n      console.log('🎵 AudioController: Stopping previous track:', this.currentPlayingTrackId);\n      this.stopTrack(this.currentPlayingTrackId);\n    }\n    \n    this.currentPlayingTrackId = trackId;\n    this.isPlaying = true;\n    this.emit('trackStarted', trackId);\n    console.log('🎵 AudioController: Now playing track:', trackId);\n  }\n\n  // Stop a specific track\n  stopTrack(trackId: string) {\n    console.log('🎵 AudioController: Stop track called for:', trackId);\n    \n    // Only stop if this is the currently playing track\n    if (this.currentPlayingTrackId === trackId) {\n      console.log('🎵 AudioController: Stopping currently playing track:', trackId);\n      this.currentPlayingTrackId = null;\n      this.isPlaying = false;\n      \n      // Notify listeners that this track should stop\n      const listener = this.listeners.get(trackId);\n      if (listener) {\n        listener();\n      }\n    } else {\n      console.log('🎵 AudioController: Track not currently playing, ignoring stop:', trackId);\n    }\n    \n    console.log('🎵 AudioController: Stop track completed for:', trackId);\n  }\n\n  // Stop all tracks\n  stopAllTracks() {\n    this.currentPlayingTrackId = null;\n    this.isPlaying = false;\n    this.listeners.forEach(listener => listener());\n    this.emit('stopped');\n    console.log('🎵 Stopped all tracks');\n  }\n\n  // Get currently playing track\n  getCurrentPlayingTrack(): string | null {\n    return this.currentPlayingTrackId;\n  }\n\n  // Register a stop listener for a track\n  registerStopListener(trackId: string, callback: () => void) {\n    this.listeners.set(trackId, callback);\n  }\n\n  // Unregister a stop listener\n  unregisterStopListener(trackId: string) {\n    this.listeners.delete(trackId);\n  }\n\n  // Check if a track is currently playing\n  isTrackPlaying(trackId: string): boolean {\n    return this.currentPlayingTrackId === trackId;\n  }\n\n  // Volume control\n  setVolume(volume: number) {\n    this.volume = Math.max(0, Math.min(1, volume));\n    this.settings.volume = this.volume;\n    this.emit('volumeChanged', this.volume);\n    console.log('🔊 Volume set to:', this.volume);\n  }\n\n  getVolume(): number {\n    return this.volume;\n  }\n\n  // Playback control\n  pause() {\n    this.isPlaying = false;\n    this.emit('paused');\n    console.log('⏸️ Audio paused');\n  }\n\n  resume() {\n    this.isPlaying = true;\n    this.emit('resumed');\n    console.log('▶️ Audio resumed');\n  }\n\n  stop() {\n    this.stopAllTracks();\n  }\n\n  // Track playback\n  async playTrack(track: StreamingTrack, crossfade: boolean = false) {\n    this.setPlayingTrack(track.id);\n    console.log('🎵 Playing track:', track.title, 'crossfade:', crossfade);\n  }\n\n  // Fade effects\n  fadeIn(duration: number) {\n    console.log('🔊 Fading in over', duration, 'seconds');\n    this.emit('fadeIn', duration);\n  }\n\n  fadeOut(duration: number) {\n    console.log('🔊 Fading out over', duration, 'seconds');\n    this.emit('fadeOut', duration);\n  }\n\n  // Settings management\n  getSettings(): AudioSettings {\n    return { ...this.settings };\n  }\n\n  enableDucking(enabled: boolean) {\n    this.settings.duckingEnabled = enabled;\n    console.log('🔊 Ducking enabled:', enabled);\n  }\n\n  setDuckingThreshold(threshold: number) {\n    this.settings.duckingThreshold = threshold;\n    console.log('🔊 Ducking threshold set to:', threshold);\n  }\n\n  setDuckingAmount(amount: number) {\n    this.settings.duckingAmount = amount;\n    console.log('🔊 Ducking amount set to:', amount);\n  }\n\n  enableNormalization(enabled: boolean) {\n    this.settings.normalizationEnabled = enabled;\n    console.log('🔊 Normalization enabled:', enabled);\n  }\n\n  setLooping(enabled: boolean, count: number) {\n    this.settings.loopEnabled = enabled;\n    this.settings.loopCount = count;\n    console.log('🔊 Looping set to:', enabled, 'count:', count);\n  }\n\n  // Hotkey management\n  getHotkeys(): Map<string, HotkeyConfig> {\n    return new Map(this.hotkeys);\n  }\n\n  addHotkey(config: HotkeyConfig) {\n    this.hotkeys.set(config.key, config);\n    console.log('⌨️ Hotkey added:', config);\n  }\n\n  removeHotkey(key: string) {\n    this.hotkeys.delete(key);\n    console.log('⌨️ Hotkey removed:', key);\n  }\n\n  enableHotkeys(enabled: boolean) {\n    console.log('⌨️ Hotkeys enabled:', enabled);\n  }\n\n  // Status methods\n  getIsPlaying(): boolean {\n    return this.isPlaying;\n  }\n\n  getCurrentTrack(): StreamingTrack | null {\n    // This would need to be implemented to return the actual track object\n    return null;\n  }\n\n  // Event system\n  on(event: string, callback: Function) {\n    if (!this.eventListeners.has(event)) {\n      this.eventListeners.set(event, []);\n    }\n    this.eventListeners.get(event)!.push(callback);\n  }\n\n  off(event: string, callback: Function) {\n    const listeners = this.eventListeners.get(event);\n    if (listeners) {\n      const index = listeners.indexOf(callback);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    }\n  }\n\n  private emit(event: string, ...args: any[]) {\n    const listeners = this.eventListeners.get(event);\n    if (listeners) {\n      listeners.forEach(callback => callback(...args));\n    }\n  }\n}\n\n// Create singleton instance\nexport const audioController = new AudioController();\nexport default audioController;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
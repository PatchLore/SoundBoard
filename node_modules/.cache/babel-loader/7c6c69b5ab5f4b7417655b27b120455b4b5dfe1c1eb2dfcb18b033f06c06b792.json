{"ast":null,"code":"class AuthService {\n  constructor() {\n    this.USER_KEY = 'stream_soundboard_user';\n    this.DEMO_USER = {\n      id: 'demo-123',\n      email: 'demo@streamsoundboard.com',\n      userType: 'streamer',\n      plan: 'pro',\n      isAuthenticated: true,\n      createdAt: new Date(),\n      lastLogin: new Date(),\n      trackLimit: -1,\n      // unlimited\n      sunoLimit: -1 // unlimited\n    };\n  }\n  // Get current user from localStorage\n  getCurrentUser() {\n    try {\n      const userData = localStorage.getItem(this.USER_KEY);\n      if (userData) {\n        const user = JSON.parse(userData);\n        // Convert date strings back to Date objects\n        user.createdAt = new Date(user.createdAt);\n        user.lastLogin = new Date(user.lastLogin);\n        return user;\n      }\n      return null;\n    } catch (error) {\n      console.error('Error parsing user data:', error);\n      return null;\n    }\n  }\n\n  // Set user data in localStorage\n  setUser(user) {\n    try {\n      localStorage.setItem(this.USER_KEY, JSON.stringify(user));\n    } catch (error) {\n      console.error('Error saving user data:', error);\n    }\n  }\n\n  // Create a new user account\n  createUser(email, userType, plan) {\n    const user = {\n      id: this.generateId(),\n      email,\n      userType,\n      plan,\n      isAuthenticated: true,\n      createdAt: new Date(),\n      lastLogin: new Date()\n    };\n    this.setUser(user);\n    return user;\n  }\n\n  // Update user plan\n  updateUserPlan(plan) {\n    const user = this.getCurrentUser();\n    if (user) {\n      user.plan = plan;\n      this.setUser(user);\n    }\n  }\n\n  // Check if user is authenticated\n  isAuthenticated() {\n    const user = this.getCurrentUser();\n    return (user === null || user === void 0 ? void 0 : user.isAuthenticated) || false;\n  }\n\n  // Check if user is a streamer\n  isStreamer() {\n    const user = this.getCurrentUser();\n    return (user === null || user === void 0 ? void 0 : user.userType) === 'streamer';\n  }\n\n  // Check if user is an agency\n  isAgency() {\n    const user = this.getCurrentUser();\n    return (user === null || user === void 0 ? void 0 : user.userType) === 'agency';\n  }\n\n  // Get user plan\n  getUserPlan() {\n    const user = this.getCurrentUser();\n    return (user === null || user === void 0 ? void 0 : user.plan) || null;\n  }\n\n  // Check if user has access to feature\n  hasFeatureAccess(feature) {\n    const user = this.getCurrentUser();\n    if (!user) return false;\n    switch (feature) {\n      case 'unlimited_tracks':\n        return user.userType === 'streamer' && user.plan === 'pro';\n      case 'unlimited_suno':\n        return user.userType === 'streamer' && user.plan === 'pro';\n      case 'obs_integration':\n        return user.userType === 'streamer' && user.plan === 'pro';\n      case 'discord_bot':\n        return user.userType === 'streamer' && user.plan === 'pro';\n      case 'client_management':\n        return user.userType === 'agency';\n      case 'analytics':\n        return user.userType === 'streamer' && user.plan === 'pro' || user.userType === 'agency';\n      case 'bulk_operations':\n        return user.userType === 'agency';\n      case 'branding_customization':\n        return user.userType === 'agency';\n      default:\n        return false;\n    }\n  }\n\n  // Login with demo account\n  loginDemo() {\n    this.setUser(this.DEMO_USER);\n    return this.DEMO_USER;\n  }\n\n  // Logout user\n  logout() {\n    localStorage.removeItem(this.USER_KEY);\n  }\n\n  // Generate unique ID\n  generateId() {\n    return 'user_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n  }\n\n  // Get comprehensive feature flags for current user\n  getFeatureFlags() {\n    const user = this.getCurrentUser();\n    if (!user) {\n      return this.getDefaultFeatureFlags();\n    }\n    switch (user.plan) {\n      case 'starter':\n        return {\n          maxTracks: 10,\n          canGenerateSuno: false,\n          canUseHotkeys: false,\n          canUseOBS: false,\n          canUseDiscord: false,\n          canUseProfessionalAudio: false,\n          canUseIntegrations: false,\n          maxClients: 0,\n          canUseAnalytics: false,\n          canUseBulkOperations: false,\n          canUseBranding: false,\n          canUseAdvancedAnalytics: false,\n          canUseCrossfade: false,\n          canUseAdvancedFades: false,\n          canUseLooping: false\n        };\n      case 'pro':\n        return {\n          maxTracks: -1,\n          // unlimited\n          canGenerateSuno: true,\n          canUseHotkeys: true,\n          canUseOBS: true,\n          canUseDiscord: true,\n          canUseProfessionalAudio: true,\n          canUseIntegrations: true,\n          maxClients: 0,\n          canUseAnalytics: true,\n          canUseBulkOperations: false,\n          canUseBranding: false,\n          canUseAdvancedAnalytics: false,\n          canUseCrossfade: true,\n          canUseAdvancedFades: true,\n          canUseLooping: true\n        };\n      case 'small-agency':\n        return {\n          maxTracks: -1,\n          // unlimited\n          canGenerateSuno: true,\n          canUseHotkeys: false,\n          canUseOBS: false,\n          canUseDiscord: false,\n          canUseProfessionalAudio: false,\n          canUseIntegrations: false,\n          maxClients: 10,\n          canUseAnalytics: true,\n          canUseBulkOperations: false,\n          canUseBranding: true,\n          canUseAdvancedAnalytics: false,\n          canUseCrossfade: true,\n          canUseAdvancedFades: true,\n          canUseLooping: true\n        };\n      case 'medium-agency':\n        return {\n          maxTracks: -1,\n          // unlimited\n          canGenerateSuno: true,\n          canUseHotkeys: false,\n          canUseOBS: false,\n          canUseDiscord: false,\n          canUseProfessionalAudio: false,\n          canUseIntegrations: false,\n          maxClients: 25,\n          canUseAnalytics: true,\n          canUseBulkOperations: true,\n          canUseBranding: true,\n          canUseAdvancedAnalytics: true,\n          canUseCrossfade: true,\n          canUseAdvancedFades: true,\n          canUseLooping: true\n        };\n      case 'enterprise':\n        return {\n          maxTracks: -1,\n          // unlimited\n          canGenerateSuno: true,\n          canUseHotkeys: false,\n          canUseOBS: false,\n          canUseDiscord: false,\n          canUseProfessionalAudio: false,\n          canUseIntegrations: false,\n          maxClients: -1,\n          // unlimited\n          canUseAnalytics: true,\n          canUseBulkOperations: true,\n          canUseBranding: true,\n          canUseAdvancedAnalytics: true,\n          canUseCrossfade: true,\n          canUseAdvancedFades: true,\n          canUseLooping: true\n        };\n      default:\n        return this.getDefaultFeatureFlags();\n    }\n  }\n\n  // Get default feature flags (no access)\n  getDefaultFeatureFlags() {\n    return {\n      maxTracks: 0,\n      canGenerateSuno: false,\n      canUseHotkeys: false,\n      canUseOBS: false,\n      canUseDiscord: false,\n      canUseProfessionalAudio: false,\n      canUseIntegrations: false,\n      maxClients: 0,\n      canUseAnalytics: false,\n      canUseBulkOperations: false,\n      canUseBranding: false,\n      canUseAdvancedAnalytics: false,\n      canUseCrossfade: false,\n      canUseAdvancedFades: false,\n      canUseLooping: false\n    };\n  }\n\n  // Get demo user for testing\n  getDemoUser() {\n    return this.DEMO_USER;\n  }\n}\nexport const authService = new AuthService();\nexport default authService;","map":{"version":3,"names":["AuthService","constructor","USER_KEY","DEMO_USER","id","email","userType","plan","isAuthenticated","createdAt","Date","lastLogin","trackLimit","sunoLimit","getCurrentUser","userData","localStorage","getItem","user","JSON","parse","error","console","setUser","setItem","stringify","createUser","generateId","updateUserPlan","isStreamer","isAgency","getUserPlan","hasFeatureAccess","feature","loginDemo","logout","removeItem","now","Math","random","toString","substr","getFeatureFlags","getDefaultFeatureFlags","maxTracks","canGenerateSuno","canUseHotkeys","canUseOBS","canUseDiscord","canUseProfessionalAudio","canUseIntegrations","maxClients","canUseAnalytics","canUseBulkOperations","canUseBranding","canUseAdvancedAnalytics","canUseCrossfade","canUseAdvancedFades","canUseLooping","getDemoUser","authService"],"sources":["/Users/allendunn/Documents/Stream/stream-soundboard/src/services/authService.ts"],"sourcesContent":["export interface User {\n  id: string;\n  email: string;\n  userType: 'streamer' | 'agency';\n  plan: string;\n  isAuthenticated: boolean;\n  createdAt: Date;\n  lastLogin: Date;\n}\n\nexport interface FeatureFlags {\n  // Track limits\n  maxTracks: number;\n  canGenerateSuno: boolean;\n  \n  // Streamer features\n  canUseHotkeys: boolean;\n  canUseOBS: boolean;\n  canUseDiscord: boolean;\n  canUseProfessionalAudio: boolean;\n  canUseIntegrations: boolean;\n  \n  // Agency features\n  maxClients: number;\n  canUseAnalytics: boolean;\n  canUseBulkOperations: boolean;\n  canUseBranding: boolean;\n  canUseAdvancedAnalytics: boolean;\n  \n  // General features\n  canUseCrossfade: boolean;\n  canUseAdvancedFades: boolean;\n  canUseLooping: boolean;\n}\n\nexport interface StreamerUser extends User {\n  userType: 'streamer';\n  plan: 'starter' | 'pro';\n  trackLimit: number;\n  sunoLimit: number;\n}\n\nexport interface AgencyUser extends User {\n  userType: 'agency';\n  plan: 'small-agency' | 'medium-agency' | 'enterprise';\n  streamerLimit: number;\n  clients: string[];\n}\n\nclass AuthService {\n  private readonly USER_KEY = 'stream_soundboard_user';\n  private readonly DEMO_USER: StreamerUser = {\n    id: 'demo-123',\n    email: 'demo@streamsoundboard.com',\n    userType: 'streamer',\n    plan: 'pro',\n    isAuthenticated: true,\n    createdAt: new Date(),\n    lastLogin: new Date(),\n    trackLimit: -1, // unlimited\n    sunoLimit: -1 // unlimited\n  };\n\n  // Get current user from localStorage\n  getCurrentUser(): User | null {\n    try {\n      const userData = localStorage.getItem(this.USER_KEY);\n      if (userData) {\n        const user = JSON.parse(userData);\n        // Convert date strings back to Date objects\n        user.createdAt = new Date(user.createdAt);\n        user.lastLogin = new Date(user.lastLogin);\n        return user;\n      }\n      return null;\n    } catch (error) {\n      console.error('Error parsing user data:', error);\n      return null;\n    }\n  }\n\n  // Set user data in localStorage\n  setUser(user: User): void {\n    try {\n      localStorage.setItem(this.USER_KEY, JSON.stringify(user));\n    } catch (error) {\n      console.error('Error saving user data:', error);\n    }\n  }\n\n  // Create a new user account\n  createUser(email: string, userType: 'streamer' | 'agency', plan: string): User {\n    const user: User = {\n      id: this.generateId(),\n      email,\n      userType,\n      plan,\n      isAuthenticated: true,\n      createdAt: new Date(),\n      lastLogin: new Date()\n    };\n\n    this.setUser(user);\n    return user;\n  }\n\n  // Update user plan\n  updateUserPlan(plan: string): void {\n    const user = this.getCurrentUser();\n    if (user) {\n      user.plan = plan;\n      this.setUser(user);\n    }\n  }\n\n  // Check if user is authenticated\n  isAuthenticated(): boolean {\n    const user = this.getCurrentUser();\n    return user?.isAuthenticated || false;\n  }\n\n  // Check if user is a streamer\n  isStreamer(): boolean {\n    const user = this.getCurrentUser();\n    return user?.userType === 'streamer';\n  }\n\n  // Check if user is an agency\n  isAgency(): boolean {\n    const user = this.getCurrentUser();\n    return user?.userType === 'agency';\n  }\n\n  // Get user plan\n  getUserPlan(): string | null {\n    const user = this.getCurrentUser();\n    return user?.plan || null;\n  }\n\n  // Check if user has access to feature\n  hasFeatureAccess(feature: string): boolean {\n    const user = this.getCurrentUser();\n    if (!user) return false;\n\n    switch (feature) {\n      case 'unlimited_tracks':\n        return user.userType === 'streamer' && user.plan === 'pro';\n      case 'unlimited_suno':\n        return user.userType === 'streamer' && user.plan === 'pro';\n      case 'obs_integration':\n        return user.userType === 'streamer' && user.plan === 'pro';\n      case 'discord_bot':\n        return user.userType === 'streamer' && user.plan === 'pro';\n      case 'client_management':\n        return user.userType === 'agency';\n      case 'analytics':\n        return (user.userType === 'streamer' && user.plan === 'pro') || user.userType === 'agency';\n      case 'bulk_operations':\n        return user.userType === 'agency';\n      case 'branding_customization':\n        return user.userType === 'agency';\n      default:\n        return false;\n    }\n  }\n\n  // Login with demo account\n  loginDemo(): StreamerUser {\n    this.setUser(this.DEMO_USER);\n    return this.DEMO_USER;\n  }\n\n  // Logout user\n  logout(): void {\n    localStorage.removeItem(this.USER_KEY);\n  }\n\n  // Generate unique ID\n  private generateId(): string {\n    return 'user_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n  }\n\n  // Get comprehensive feature flags for current user\n  getFeatureFlags(): FeatureFlags {\n    const user = this.getCurrentUser();\n    if (!user) {\n      return this.getDefaultFeatureFlags();\n    }\n\n    switch (user.plan) {\n      case 'starter':\n        return {\n          maxTracks: 10,\n          canGenerateSuno: false,\n          canUseHotkeys: false,\n          canUseOBS: false,\n          canUseDiscord: false,\n          canUseProfessionalAudio: false,\n          canUseIntegrations: false,\n          maxClients: 0,\n          canUseAnalytics: false,\n          canUseBulkOperations: false,\n          canUseBranding: false,\n          canUseAdvancedAnalytics: false,\n          canUseCrossfade: false,\n          canUseAdvancedFades: false,\n          canUseLooping: false\n        };\n      \n      case 'pro':\n        return {\n          maxTracks: -1, // unlimited\n          canGenerateSuno: true,\n          canUseHotkeys: true,\n          canUseOBS: true,\n          canUseDiscord: true,\n          canUseProfessionalAudio: true,\n          canUseIntegrations: true,\n          maxClients: 0,\n          canUseAnalytics: true,\n          canUseBulkOperations: false,\n          canUseBranding: false,\n          canUseAdvancedAnalytics: false,\n          canUseCrossfade: true,\n          canUseAdvancedFades: true,\n          canUseLooping: true\n        };\n      \n      case 'small-agency':\n        return {\n          maxTracks: -1, // unlimited\n          canGenerateSuno: true,\n          canUseHotkeys: false,\n          canUseOBS: false,\n          canUseDiscord: false,\n          canUseProfessionalAudio: false,\n          canUseIntegrations: false,\n          maxClients: 10,\n          canUseAnalytics: true,\n          canUseBulkOperations: false,\n          canUseBranding: true,\n          canUseAdvancedAnalytics: false,\n          canUseCrossfade: true,\n          canUseAdvancedFades: true,\n          canUseLooping: true\n        };\n      \n      case 'medium-agency':\n        return {\n          maxTracks: -1, // unlimited\n          canGenerateSuno: true,\n          canUseHotkeys: false,\n          canUseOBS: false,\n          canUseDiscord: false,\n          canUseProfessionalAudio: false,\n          canUseIntegrations: false,\n          maxClients: 25,\n          canUseAnalytics: true,\n          canUseBulkOperations: true,\n          canUseBranding: true,\n          canUseAdvancedAnalytics: true,\n          canUseCrossfade: true,\n          canUseAdvancedFades: true,\n          canUseLooping: true\n        };\n      \n      case 'enterprise':\n        return {\n          maxTracks: -1, // unlimited\n          canGenerateSuno: true,\n          canUseHotkeys: false,\n          canUseOBS: false,\n          canUseDiscord: false,\n          canUseProfessionalAudio: false,\n          canUseIntegrations: false,\n          maxClients: -1, // unlimited\n          canUseAnalytics: true,\n          canUseBulkOperations: true,\n          canUseBranding: true,\n          canUseAdvancedAnalytics: true,\n          canUseCrossfade: true,\n          canUseAdvancedFades: true,\n          canUseLooping: true\n        };\n      \n      default:\n        return this.getDefaultFeatureFlags();\n    }\n  }\n\n  // Get default feature flags (no access)\n  private getDefaultFeatureFlags(): FeatureFlags {\n    return {\n      maxTracks: 0,\n      canGenerateSuno: false,\n      canUseHotkeys: false,\n      canUseOBS: false,\n      canUseDiscord: false,\n      canUseProfessionalAudio: false,\n      canUseIntegrations: false,\n      maxClients: 0,\n      canUseAnalytics: false,\n      canUseBulkOperations: false,\n      canUseBranding: false,\n      canUseAdvancedAnalytics: false,\n      canUseCrossfade: false,\n      canUseAdvancedFades: false,\n      canUseLooping: false\n    };\n  }\n\n  // Get demo user for testing\n  getDemoUser(): StreamerUser {\n    return this.DEMO_USER;\n  }\n}\n\nexport const authService = new AuthService();\nexport default authService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"class WebhookService{constructor(){this.handlers=new Map();this.pendingTracks=new Map();this.webhookUrl=void 0;this.webhookUrl=process.env.REACT_APP_WEBHOOK_URL||'https://webhook.site/your-unique-url';this.initializeWebhook();}initializeWebhook(){console.log('🔗 Webhook service initialized with URL:',this.webhookUrl);// Don't automatically simulate events - wait for handlers to be registered\nconsole.log('🔗 Webhook service ready - will simulate events when handlers are registered');}registerHandler(taskId,handler){this.handlers.set(taskId,handler);this.pendingTracks.set(taskId,{status:'generating',startTime:Date.now()});// Notify that generation has started\nhandler.onTrackGenerating(taskId);console.log(\"\\uD83D\\uDD17 Registered webhook handler for task: \".concat(taskId));// If this is the first handler, start simulating webhook events\nif(this.handlers.size===1){console.log('🔗 First handler registered, starting webhook simulation...');this.simulateWebhookEvents();}}unregisterHandler(taskId){this.handlers.delete(taskId);this.pendingTracks.delete(taskId);console.log(\"\\uD83D\\uDD17 Unregistered webhook handler for task: \".concat(taskId));}processWebhookEvent(event){const handler=this.handlers.get(event.taskId);if(!handler){// Only log warning for non-test events to reduce noise\nif(!event.taskId.startsWith('test_task_')){console.warn(\"\\uD83D\\uDD17 No handler found for webhook event: \".concat(event.taskId));}return;}switch(event.status){case'completed':if(event.audioUrl){var _event$metadata,_event$metadata2,_event$metadata3,_event$metadata4,_event$metadata5;const track={id:\"suno_\".concat(event.taskId),title:((_event$metadata=event.metadata)===null||_event$metadata===void 0?void 0:_event$metadata.title)||\"AI Generated Track \".concat(event.taskId),artist:'AI-generated track via Suno API',duration:((_event$metadata2=event.metadata)===null||_event$metadata2===void 0?void 0:_event$metadata2.duration)||150,audioUrl:event.audioUrl,category:'gaming',// Default category\nsubcategory:'ambient',// Default subcategory\nmood:((_event$metadata3=event.metadata)===null||_event$metadata3===void 0?void 0:_event$metadata3.mood)||'chill',energy:3,// Default medium energy\ntags:['ai-generated','custom',((_event$metadata4=event.metadata)===null||_event$metadata4===void 0?void 0:_event$metadata4.genre)||'electronic'],streamSafe:true,loopFriendly:true,hasIntro:false,hasOutro:false,uploadDate:new Date().toISOString(),uploadedBy:'system',approved:true,// Legacy fields for backward compatibility\nsunoId:event.taskId,streamingCategory:'chill_gaming',energyLevel:'medium',genre:((_event$metadata5=event.metadata)===null||_event$metadata5===void 0?void 0:_event$metadata5.genre)||'electronic',dmcaSafe:true,vodSafe:true,license:'royalty_free',licenseDetails:'Suno AI generated track',platformCompliance:{twitch:'safe',youtube:'safe',facebook:'safe',tiktok:'safe'},usageTracking:{usageCount:0,lastUsed:undefined},agencyNotes:'AI-generated track via webhook'};handler.onTrackCompleted(event.taskId,track);this.pendingTracks.delete(event.taskId);this.handlers.delete(event.taskId);console.log(\"\\uD83C\\uDFB5 Track completed: \".concat(event.taskId),track);}break;case'failed':handler.onTrackFailed(event.taskId,event.error||'Unknown error');this.pendingTracks.delete(event.taskId);this.handlers.delete(event.taskId);console.error(\"\\u274C Track generation failed: \".concat(event.taskId),event.error);break;case'generating':handler.onTrackGenerating(event.taskId);console.log(\"\\uD83D\\uDD04 Track still generating: \".concat(event.taskId));break;}}getPendingTracks(){return new Map(this.pendingTracks);}isTrackGenerating(taskId){return this.pendingTracks.has(taskId);}getGenerationTime(taskId){const track=this.pendingTracks.get(taskId);if(track){return Date.now()-track.startTime;}return null;}// Manually trigger webhook simulation for testing\ntriggerTestWebhooks(){if(this.handlers.size===0){console.log('🔗 No handlers registered, creating test handlers first...');// Create test handlers for demonstration\nconst testHandler={onTrackGenerating:taskId=>console.log(\"\\uD83D\\uDD04 Test track generating: \".concat(taskId)),onTrackCompleted:(taskId,track)=>{console.log(\"\\u2705 Test track completed: \".concat(taskId),track);// Save to storage for demonstration\nconst trackStorageService=require('./trackStorageService').default;trackStorageService.saveTrack(track);},onTrackFailed:(taskId,error)=>console.error(\"\\u274C Test track failed: \".concat(taskId),error)};this.registerHandler('test_task_1',testHandler);this.registerHandler('test_task_2',testHandler);}else{console.log('🔗 Triggering test webhooks for existing handlers...');this.simulateWebhookEvents();}}simulateWebhookEvents(){// Only simulate events if there are registered handlers\nif(this.handlers.size===0){console.log('🔗 No webhook handlers registered, skipping test events');return;}// Simulate a track completing after 5 seconds\nsetTimeout(()=>{// Only process if we still have handlers\nif(this.handlers.size>0){const testEvent={taskId:'test_task_1',status:'completed',audioUrl:'https://api.sunoapi.org/sample1.mp3',metadata:{title:'Test AI Track',duration:180,genre:'ambient',mood:'chill'}};this.processWebhookEvent(testEvent);}},5000);// Simulate another track completing after 8 seconds\nsetTimeout(()=>{// Only process if we still have handlers\nif(this.handlers.size>0){const testEvent2={taskId:'test_task_2',status:'completed',audioUrl:'https://api.sunoapi.org/sample2.mp3',metadata:{title:'Test Energetic Track',duration:195,genre:'electronic',mood:'energetic'}};this.processWebhookEvent(testEvent2);}},8000);}destroy(){this.handlers.clear();this.pendingTracks.clear();console.log('🔗 Webhook service destroyed');}}const webhookService=new WebhookService();export default webhookService;","map":{"version":3,"names":["WebhookService","constructor","handlers","Map","pendingTracks","webhookUrl","process","env","REACT_APP_WEBHOOK_URL","initializeWebhook","console","log","registerHandler","taskId","handler","set","status","startTime","Date","now","onTrackGenerating","concat","size","simulateWebhookEvents","unregisterHandler","delete","processWebhookEvent","event","get","startsWith","warn","audioUrl","_event$metadata","_event$metadata2","_event$metadata3","_event$metadata4","_event$metadata5","track","id","title","metadata","artist","duration","category","subcategory","mood","energy","tags","genre","streamSafe","loopFriendly","hasIntro","hasOutro","uploadDate","toISOString","uploadedBy","approved","sunoId","streamingCategory","energyLevel","dmcaSafe","vodSafe","license","licenseDetails","platformCompliance","twitch","youtube","facebook","tiktok","usageTracking","usageCount","lastUsed","undefined","agencyNotes","onTrackCompleted","onTrackFailed","error","getPendingTracks","isTrackGenerating","has","getGenerationTime","triggerTestWebhooks","testHandler","trackStorageService","require","default","saveTrack","setTimeout","testEvent","testEvent2","destroy","clear","webhookService"],"sources":["/Users/allendunn/Documents/Stream/stream-soundboard/src/services/webhookService.ts"],"sourcesContent":["import { StreamingTrack } from '../types/track';\n\nexport interface SunoWebhookEvent {\n  taskId: string;\n  status: 'generating' | 'completed' | 'failed';\n  audioUrl?: string;\n  error?: string;\n  metadata?: {\n    title?: string;\n    duration?: number;\n    genre?: string;\n    mood?: string;\n  };\n}\n\nexport interface WebhookHandler {\n  onTrackGenerating: (taskId: string) => void;\n  onTrackCompleted: (taskId: string, track: StreamingTrack) => void;\n  onTrackFailed: (taskId: string, error: string) => void;\n}\n\nclass WebhookService {\n  private handlers: Map<string, WebhookHandler> = new Map();\n  private pendingTracks: Map<string, { status: 'generating'; startTime: number }> = new Map();\n  private webhookUrl: string;\n\n  constructor() {\n    this.webhookUrl = process.env.REACT_APP_WEBHOOK_URL || 'https://webhook.site/your-unique-url';\n    this.initializeWebhook();\n  }\n\n  private initializeWebhook() {\n    console.log('🔗 Webhook service initialized with URL:', this.webhookUrl);\n    \n    // Don't automatically simulate events - wait for handlers to be registered\n    console.log('🔗 Webhook service ready - will simulate events when handlers are registered');\n  }\n\n  public registerHandler(taskId: string, handler: WebhookHandler): void {\n    this.handlers.set(taskId, handler);\n    this.pendingTracks.set(taskId, { status: 'generating', startTime: Date.now() });\n    \n    // Notify that generation has started\n    handler.onTrackGenerating(taskId);\n    \n    console.log(`🔗 Registered webhook handler for task: ${taskId}`);\n    \n    // If this is the first handler, start simulating webhook events\n    if (this.handlers.size === 1) {\n      console.log('🔗 First handler registered, starting webhook simulation...');\n      this.simulateWebhookEvents();\n    }\n  }\n\n  public unregisterHandler(taskId: string): void {\n    this.handlers.delete(taskId);\n    this.pendingTracks.delete(taskId);\n    console.log(`🔗 Unregistered webhook handler for task: ${taskId}`);\n  }\n\n  public processWebhookEvent(event: SunoWebhookEvent): void {\n    const handler = this.handlers.get(event.taskId);\n    if (!handler) {\n      // Only log warning for non-test events to reduce noise\n      if (!event.taskId.startsWith('test_task_')) {\n        console.warn(`🔗 No handler found for webhook event: ${event.taskId}`);\n      }\n      return;\n    }\n\n    switch (event.status) {\n      case 'completed':\n        if (event.audioUrl) {\n          const track: StreamingTrack = {\n            id: `suno_${event.taskId}`,\n            title: event.metadata?.title || `AI Generated Track ${event.taskId}`,\n            artist: 'AI-generated track via Suno API',\n            duration: event.metadata?.duration || 150,\n            audioUrl: event.audioUrl,\n            category: 'gaming', // Default category\n            subcategory: 'ambient', // Default subcategory\n            mood: (event.metadata?.mood as any) || 'chill',\n            energy: 3, // Default medium energy\n            tags: ['ai-generated', 'custom', event.metadata?.genre || 'electronic'],\n            streamSafe: true,\n            loopFriendly: true,\n            hasIntro: false,\n            hasOutro: false,\n            uploadDate: new Date().toISOString(),\n            uploadedBy: 'system',\n            approved: true,\n            // Legacy fields for backward compatibility\n            sunoId: event.taskId,\n            streamingCategory: 'chill_gaming',\n            energyLevel: 'medium',\n            genre: (event.metadata?.genre as any) || 'electronic',\n            dmcaSafe: true,\n            vodSafe: true,\n            license: 'royalty_free',\n            licenseDetails: 'Suno AI generated track',\n            platformCompliance: {\n              twitch: 'safe',\n              youtube: 'safe',\n              facebook: 'safe',\n              tiktok: 'safe'\n            },\n            usageTracking: {\n              usageCount: 0,\n              lastUsed: undefined\n            },\n            agencyNotes: 'AI-generated track via webhook'\n          };\n\n          handler.onTrackCompleted(event.taskId, track);\n          this.pendingTracks.delete(event.taskId);\n          this.handlers.delete(event.taskId);\n          \n          console.log(`🎵 Track completed: ${event.taskId}`, track);\n        }\n        break;\n\n      case 'failed':\n        handler.onTrackFailed(event.taskId, event.error || 'Unknown error');\n        this.pendingTracks.delete(event.taskId);\n        this.handlers.delete(event.taskId);\n        \n        console.error(`❌ Track generation failed: ${event.taskId}`, event.error);\n        break;\n\n      case 'generating':\n        handler.onTrackGenerating(event.taskId);\n        console.log(`🔄 Track still generating: ${event.taskId}`);\n        break;\n    }\n  }\n\n  public getPendingTracks(): Map<string, { status: 'generating'; startTime: number }> {\n    return new Map(this.pendingTracks);\n  }\n\n  public isTrackGenerating(taskId: string): boolean {\n    return this.pendingTracks.has(taskId);\n  }\n\n  public getGenerationTime(taskId: string): number | null {\n    const track = this.pendingTracks.get(taskId);\n    if (track) {\n      return Date.now() - track.startTime;\n    }\n    return null;\n  }\n\n  // Manually trigger webhook simulation for testing\n  public triggerTestWebhooks(): void {\n    if (this.handlers.size === 0) {\n      console.log('🔗 No handlers registered, creating test handlers first...');\n      \n      // Create test handlers for demonstration\n      const testHandler: WebhookHandler = {\n        onTrackGenerating: (taskId) => console.log(`🔄 Test track generating: ${taskId}`),\n        onTrackCompleted: (taskId, track) => {\n          console.log(`✅ Test track completed: ${taskId}`, track);\n          // Save to storage for demonstration\n          const trackStorageService = require('./trackStorageService').default;\n          trackStorageService.saveTrack(track);\n        },\n        onTrackFailed: (taskId, error) => console.error(`❌ Test track failed: ${taskId}`, error)\n      };\n      \n      this.registerHandler('test_task_1', testHandler);\n      this.registerHandler('test_task_2', testHandler);\n    } else {\n      console.log('🔗 Triggering test webhooks for existing handlers...');\n      this.simulateWebhookEvents();\n    }\n  }\n\n  private simulateWebhookEvents(): void {\n    // Only simulate events if there are registered handlers\n    if (this.handlers.size === 0) {\n      console.log('🔗 No webhook handlers registered, skipping test events');\n      return;\n    }\n\n    // Simulate a track completing after 5 seconds\n    setTimeout(() => {\n      // Only process if we still have handlers\n      if (this.handlers.size > 0) {\n        const testEvent: SunoWebhookEvent = {\n          taskId: 'test_task_1',\n          status: 'completed',\n          audioUrl: 'https://api.sunoapi.org/sample1.mp3',\n          metadata: {\n            title: 'Test AI Track',\n            duration: 180,\n            genre: 'ambient',\n            mood: 'chill'\n        }\n        };\n        this.processWebhookEvent(testEvent);\n      }\n    }, 5000);\n\n    // Simulate another track completing after 8 seconds\n    setTimeout(() => {\n      // Only process if we still have handlers\n      if (this.handlers.size > 0) {\n        const testEvent2: SunoWebhookEvent = {\n          taskId: 'test_task_2',\n          status: 'completed',\n          audioUrl: 'https://api.sunoapi.org/sample2.mp3',\n          metadata: {\n            title: 'Test Energetic Track',\n            duration: 195,\n            genre: 'electronic',\n            mood: 'energetic'\n          }\n        };\n        this.processWebhookEvent(testEvent2);\n      }\n    }, 8000);\n  }\n\n  public destroy(): void {\n    this.handlers.clear();\n    this.pendingTracks.clear();\n    console.log('🔗 Webhook service destroyed');\n  }\n}\n\nconst webhookService = new WebhookService();\nexport default webhookService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// Backward compatibility alias\n\n// Legacy interface for backward compatibility\n\n// Helper functions for backward compatibility\nexport const getEnergyLevel = track => {\n  if (track.energyLevel) return track.energyLevel;\n  if (track.energy) {\n    if (track.energy <= 2) return 'low';\n    if (track.energy <= 3) return 'medium';\n    return 'high';\n  }\n  return 'medium';\n};\nexport const getEnergyLevelColor = level => {\n  switch (level.toLowerCase()) {\n    case 'low':\n      return 'bg-green-600/20 text-green-400 border-green-600/30';\n    case 'medium':\n      return 'bg-yellow-600/20 text-yellow-400 border-yellow-600/30';\n    case 'high':\n      return 'bg-red-600/20 text-red-400 border-red-600/30';\n    default:\n      return 'bg-gray-600/20 text-gray-400 border-gray-600/30';\n  }\n};\nexport const getStreamingCategory = track => {\n  return track.streamingCategory || track.category || 'unknown';\n};","map":{"version":3,"names":["getEnergyLevel","track","energyLevel","energy","getEnergyLevelColor","level","toLowerCase","getStreamingCategory","streamingCategory","category"],"sources":["/Users/allendunn/Documents/Stream/stream-soundboard/src/types/track.ts"],"sourcesContent":["export interface Track {\n  id: string;\n  title: string;\n  artist: string;\n  duration: number;\n  audioUrl: string;\n  coverUrl?: string;\n  \n  // Streaming-specific metadata\n  category: 'stream-starting' | 'chill-gaming' | 'gaming-action' | 'hype-raid' | 'break-brb' | 'talk-show' | 'intro-outro' | 'boss-battle' | 'intermission' | 'background-chat';\n  subcategory: string;\n  mood: 'chill' | 'epic' | 'energetic' | 'mysterious' | 'uplifting' | 'dark' | 'peaceful';\n  energy: 1 | 2 | 3 | 4 | 5; // 1=very chill, 5=high energy\n  bpm?: number;\n  key?: string;\n  tags: string[];\n  description?: string;\n  \n  // Usage metadata\n  streamSafe: boolean;\n  loopFriendly: boolean;\n  hasIntro: boolean;\n  hasOutro: boolean;\n  dmcaSafe: boolean;\n  \n  // Admin metadata\n  uploadDate: string;\n  uploadedBy: string;\n  approved: boolean;\n  featured: boolean;\n  \n  // Legacy fields for backward compatibility\n  streamingCategory?: string;\n  genre?: string;\n  energyLevel?: string; // For backward compatibility\n  vodSafe?: boolean;\n  license?: string;\n  licenseDetails?: string;\n  platformCompliance?: {\n    twitch: string;\n    youtube: string;\n    facebook: string;\n    tiktok: string;\n  };\n  usageTracking?: {\n    usageCount: number;\n    lastUsed?: Date;\n  };\n  agencyNotes?: string;\n}\n\n// Backward compatibility alias\nexport type StreamingTrack = Track;\n\nexport interface Category {\n  id: string;\n  name: string;\n  description: string;\n  color: string;\n  icon: string;\n  trackCount: number;\n}\n\nexport interface FilterOptions {\n  category?: string;\n  mood?: string[];\n  energy?: number[];\n  duration?: { min: number; max: number };\n  bpm?: { min: number; max: number };\n  loopFriendly?: boolean;\n  tags?: string[];\n  featured?: boolean;\n}\n\nexport interface AgencyTheme {\n  id: string;\n  name: string;\n  primaryColor: string;\n  secondaryColor: string;\n  accentColor: string;\n  logo: string;\n  customCSS?: string;\n  brandedCategories?: { [key: string]: string };\n  customPlaylists?: string[];\n}\n\n// Legacy interface for backward compatibility\nexport interface LegacyTrack {\n  id: string;\n  title: string;\n  artist: string;\n  duration: number;\n  audioUrl: string;\n  streamingCategory: string;\n  genre: string;\n  mood: string;\n  energyLevel: string;\n  tags: string[];\n  description: string;\n  dmcaSafe: boolean;\n  vodSafe: boolean;\n  license: string;\n  licenseDetails: string;\n  platformCompliance: {\n    twitch: string;\n    youtube: string;\n    facebook: string;\n    tiktok: string;\n  };\n  usageTracking: {\n    usageCount: number;\n    lastUsed?: Date;\n  };\n  agencyNotes: string;\n}\n\n// Helper functions for backward compatibility\nexport const getEnergyLevel = (track: Track): string => {\n  if (track.energyLevel) return track.energyLevel;\n  if (track.energy) {\n    if (track.energy <= 2) return 'low';\n    if (track.energy <= 3) return 'medium';\n    return 'high';\n  }\n  return 'medium';\n};\n\nexport const getEnergyLevelColor = (level: string): string => {\n  switch (level.toLowerCase()) {\n    case 'low': return 'bg-green-600/20 text-green-400 border-green-600/30';\n    case 'medium': return 'bg-yellow-600/20 text-yellow-400 border-yellow-600/30';\n    case 'high': return 'bg-red-600/20 text-red-400 border-red-600/30';\n    default: return 'bg-gray-600/20 text-gray-400 border-gray-600/30';\n  }\n};\n\nexport const getStreamingCategory = (track: Track): string => {\n  return track.streamingCategory || track.category || 'unknown';\n};\n\n"],"mappings":"AAmDA;;AAmCA;;AA8BA;AACA,OAAO,MAAMA,cAAc,GAAIC,KAAY,IAAa;EACtD,IAAIA,KAAK,CAACC,WAAW,EAAE,OAAOD,KAAK,CAACC,WAAW;EAC/C,IAAID,KAAK,CAACE,MAAM,EAAE;IAChB,IAAIF,KAAK,CAACE,MAAM,IAAI,CAAC,EAAE,OAAO,KAAK;IACnC,IAAIF,KAAK,CAACE,MAAM,IAAI,CAAC,EAAE,OAAO,QAAQ;IACtC,OAAO,MAAM;EACf;EACA,OAAO,QAAQ;AACjB,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAIC,KAAa,IAAa;EAC5D,QAAQA,KAAK,CAACC,WAAW,CAAC,CAAC;IACzB,KAAK,KAAK;MAAE,OAAO,oDAAoD;IACvE,KAAK,QAAQ;MAAE,OAAO,uDAAuD;IAC7E,KAAK,MAAM;MAAE,OAAO,8CAA8C;IAClE;MAAS,OAAO,iDAAiD;EACnE;AACF,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAIN,KAAY,IAAa;EAC5D,OAAOA,KAAK,CAACO,iBAAiB,IAAIP,KAAK,CAACQ,QAAQ,IAAI,SAAS;AAC/D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
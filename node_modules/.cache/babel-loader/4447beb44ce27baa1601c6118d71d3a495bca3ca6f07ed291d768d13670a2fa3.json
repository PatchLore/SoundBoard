{"ast":null,"code":"import React from 'react';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoleGuard = ({\n  userRole,\n  allowedRoles,\n  children,\n  fallback = null\n}) => {\n  if (!allowedRoles.includes(userRole.type)) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: fallback\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_c = RoleGuard;\nexport default RoleGuard;\nvar _c;\n$RefreshReg$(_c, \"RoleGuard\");","map":{"version":3,"names":["React","Fragment","_Fragment","jsxDEV","_jsxDEV","RoleGuard","userRole","allowedRoles","children","fallback","includes","type","_c","$RefreshReg$"],"sources":["/Users/allendunn/Documents/Stream/stream-soundboard/src/components/RoleGuard.tsx"],"sourcesContent":["import React from 'react';\nimport { RoleGuardProps } from '../types/agency';\n\nconst RoleGuard: React.FC<RoleGuardProps> = ({ \n  userRole, \n  allowedRoles, \n  children, \n  fallback = null \n}) => {\n  if (!allowedRoles.includes(userRole.type)) {\n    return <>{fallback}</>;\n  }\n  \n  return <>{children}</>;\n};\n\nexport default RoleGuard;\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,SAAmC,GAAGA,CAAC;EAC3CC,QAAQ;EACRC,YAAY;EACZC,QAAQ;EACRC,QAAQ,GAAG;AACb,CAAC,KAAK;EACJ,IAAI,CAACF,YAAY,CAACG,QAAQ,CAACJ,QAAQ,CAACK,IAAI,CAAC,EAAE;IACzC,oBAAOP,OAAA,CAAAF,SAAA;MAAAM,QAAA,EAAGC;IAAQ,gBAAG,CAAC;EACxB;EAEA,oBAAOL,OAAA,CAAAF,SAAA;IAAAM,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACI,EAAA,GAXIP,SAAmC;AAazC,eAAeA,SAAS;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{useState,useEffect}from'react';import audioController from'../services/audioController';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UltraLightTrackCard=_ref=>{let{track,onPlay,onPause,isPlaying:externalIsPlaying}=_ref;const[internalIsPlaying,setInternalIsPlaying]=useState(false);// Use external isPlaying if provided, otherwise use internal state\nconst isPlaying=externalIsPlaying!==undefined?externalIsPlaying:internalIsPlaying;// Register with audio controller\nuseEffect(()=>{const stopCallback=()=>{if(onPause){onPause();}else{setInternalIsPlaying(false);}};audioController.registerStopListener(track.id,stopCallback);return()=>{audioController.unregisterStopListener(track.id);};},[track.id,onPause]);const handlePlay=()=>{console.log('ðŸŽµ UltraLightTrackCard Play button clicked for:',track.title);if(isPlaying){console.log('ðŸŽµ Stopping track:',track.title);if(onPause){onPause();}else{setInternalIsPlaying(false);audioController.stopTrack(track.id);}}else{console.log('ðŸŽµ Starting track:',track.title);if(onPlay){onPlay();}else{setInternalIsPlaying(true);audioController.setPlayingTrack(track.id);}}};const handlePause=()=>{if(onPause){onPause();}else{setInternalIsPlaying(false);audioController.stopTrack(track.id);}};const handleEnd=()=>{if(onPause){onPause();}else{setInternalIsPlaying(false);audioController.stopTrack(track.id);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 border border-gray-600 p-3 rounded\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-white truncate mb-2\",children:track.title}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-400 mb-2\",children:track.duration}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-blue-400 mb-3\",children:track.streamingCategory}),/*#__PURE__*/_jsx(\"button\",{onClick:handlePlay,className:\"w-full py-2 px-3 rounded text-sm font-medium transition-colors \".concat(isPlaying?'bg-red-600 text-white':'bg-green-600 hover:bg-green-700 text-white'),children:isPlaying?'Stop':'Play'})]});};export default UltraLightTrackCard;","map":{"version":3,"names":["React","useState","useEffect","audioController","jsx","_jsx","jsxs","_jsxs","UltraLightTrackCard","_ref","track","onPlay","onPause","isPlaying","externalIsPlaying","internalIsPlaying","setInternalIsPlaying","undefined","stopCallback","registerStopListener","id","unregisterStopListener","handlePlay","console","log","title","stopTrack","setPlayingTrack","handlePause","handleEnd","className","children","duration","streamingCategory","onClick","concat"],"sources":["/Users/allendunn/Documents/Stream/stream-soundboard/src/components/UltraLightTrackCard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StreamingTrack } from '../types/track';\nimport audioController from '../services/audioController';\n\ninterface UltraLightTrackCardProps {\n  track: StreamingTrack;\n  onPlay?: () => void;\n  onPause?: () => void;\n  isPlaying?: boolean;\n}\n\nconst UltraLightTrackCard: React.FC<UltraLightTrackCardProps> = ({ track, onPlay, onPause, isPlaying: externalIsPlaying }) => {\n  const [internalIsPlaying, setInternalIsPlaying] = useState(false);\n  \n  // Use external isPlaying if provided, otherwise use internal state\n  const isPlaying = externalIsPlaying !== undefined ? externalIsPlaying : internalIsPlaying;\n\n  // Register with audio controller\n  useEffect(() => {\n    const stopCallback = () => {\n      if (onPause) {\n        onPause();\n      } else {\n        setInternalIsPlaying(false);\n      }\n    };\n    audioController.registerStopListener(track.id, stopCallback);\n    \n    return () => {\n      audioController.unregisterStopListener(track.id);\n    };\n  }, [track.id, onPause]);\n\n  const handlePlay = () => {\n    console.log('ðŸŽµ UltraLightTrackCard Play button clicked for:', track.title);\n    if (isPlaying) {\n      console.log('ðŸŽµ Stopping track:', track.title);\n      if (onPause) {\n        onPause();\n      } else {\n        setInternalIsPlaying(false);\n        audioController.stopTrack(track.id);\n      }\n    } else {\n      console.log('ðŸŽµ Starting track:', track.title);\n      if (onPlay) {\n        onPlay();\n      } else {\n        setInternalIsPlaying(true);\n        audioController.setPlayingTrack(track.id);\n      }\n    }\n  };\n\n  const handlePause = () => {\n    if (onPause) {\n      onPause();\n    } else {\n      setInternalIsPlaying(false);\n      audioController.stopTrack(track.id);\n    }\n  };\n\n  const handleEnd = () => {\n    if (onPause) {\n      onPause();\n    } else {\n      setInternalIsPlaying(false);\n      audioController.stopTrack(track.id);\n    }\n  };\n\n  return (\n    <div className=\"bg-gray-800 border border-gray-600 p-3 rounded\">\n\n\n      {/* Track Title - Minimal */}\n      <h3 className=\"text-sm font-medium text-white truncate mb-2\">{track.title}</h3>\n      \n      {/* Duration - Minimal */}\n      <div className=\"text-xs text-gray-400 mb-2\">{track.duration}</div>\n      \n      {/* Category - Minimal */}\n      <div className=\"text-xs text-blue-400 mb-3\">{track.streamingCategory}</div>\n      \n      {/* Play Button - Simple */}\n      <button\n        onClick={handlePlay}\n        className={`w-full py-2 px-3 rounded text-sm font-medium transition-colors ${\n          isPlaying\n            ? 'bg-red-600 text-white'\n            : 'bg-green-600 hover:bg-green-700 text-white'\n        }`}\n      >\n        {isPlaying ? 'Stop' : 'Play'}\n      </button>\n    </div>\n  );\n};\n\nexport default UltraLightTrackCard;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAElD,MAAO,CAAAC,eAAe,KAAM,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAS1D,KAAM,CAAAC,mBAAuD,CAAGC,IAAA,EAA8D,IAA7D,CAAEC,KAAK,CAAEC,MAAM,CAAEC,OAAO,CAAEC,SAAS,CAAEC,iBAAkB,CAAC,CAAAL,IAAA,CACvH,KAAM,CAACM,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAEjE;AACA,KAAM,CAAAY,SAAS,CAAGC,iBAAiB,GAAKG,SAAS,CAAGH,iBAAiB,CAAGC,iBAAiB,CAEzF;AACAb,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgB,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAIN,OAAO,CAAE,CACXA,OAAO,CAAC,CAAC,CACX,CAAC,IAAM,CACLI,oBAAoB,CAAC,KAAK,CAAC,CAC7B,CACF,CAAC,CACDb,eAAe,CAACgB,oBAAoB,CAACT,KAAK,CAACU,EAAE,CAAEF,YAAY,CAAC,CAE5D,MAAO,IAAM,CACXf,eAAe,CAACkB,sBAAsB,CAACX,KAAK,CAACU,EAAE,CAAC,CAClD,CAAC,CACH,CAAC,CAAE,CAACV,KAAK,CAACU,EAAE,CAAER,OAAO,CAAC,CAAC,CAEvB,KAAM,CAAAU,UAAU,CAAGA,CAAA,GAAM,CACvBC,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAEd,KAAK,CAACe,KAAK,CAAC,CAC3E,GAAIZ,SAAS,CAAE,CACbU,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAEd,KAAK,CAACe,KAAK,CAAC,CAC9C,GAAIb,OAAO,CAAE,CACXA,OAAO,CAAC,CAAC,CACX,CAAC,IAAM,CACLI,oBAAoB,CAAC,KAAK,CAAC,CAC3Bb,eAAe,CAACuB,SAAS,CAAChB,KAAK,CAACU,EAAE,CAAC,CACrC,CACF,CAAC,IAAM,CACLG,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAEd,KAAK,CAACe,KAAK,CAAC,CAC9C,GAAId,MAAM,CAAE,CACVA,MAAM,CAAC,CAAC,CACV,CAAC,IAAM,CACLK,oBAAoB,CAAC,IAAI,CAAC,CAC1Bb,eAAe,CAACwB,eAAe,CAACjB,KAAK,CAACU,EAAE,CAAC,CAC3C,CACF,CACF,CAAC,CAED,KAAM,CAAAQ,WAAW,CAAGA,CAAA,GAAM,CACxB,GAAIhB,OAAO,CAAE,CACXA,OAAO,CAAC,CAAC,CACX,CAAC,IAAM,CACLI,oBAAoB,CAAC,KAAK,CAAC,CAC3Bb,eAAe,CAACuB,SAAS,CAAChB,KAAK,CAACU,EAAE,CAAC,CACrC,CACF,CAAC,CAED,KAAM,CAAAS,SAAS,CAAGA,CAAA,GAAM,CACtB,GAAIjB,OAAO,CAAE,CACXA,OAAO,CAAC,CAAC,CACX,CAAC,IAAM,CACLI,oBAAoB,CAAC,KAAK,CAAC,CAC3Bb,eAAe,CAACuB,SAAS,CAAChB,KAAK,CAACU,EAAE,CAAC,CACrC,CACF,CAAC,CAED,mBACEb,KAAA,QAAKuB,SAAS,CAAC,gDAAgD,CAAAC,QAAA,eAI7D1B,IAAA,OAAIyB,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAErB,KAAK,CAACe,KAAK,CAAK,CAAC,cAG/EpB,IAAA,QAAKyB,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAErB,KAAK,CAACsB,QAAQ,CAAM,CAAC,cAGlE3B,IAAA,QAAKyB,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAErB,KAAK,CAACuB,iBAAiB,CAAM,CAAC,cAG3E5B,IAAA,WACE6B,OAAO,CAAEZ,UAAW,CACpBQ,SAAS,mEAAAK,MAAA,CACPtB,SAAS,CACL,uBAAuB,CACvB,4CAA4C,CAC/C,CAAAkB,QAAA,CAEFlB,SAAS,CAAG,MAAM,CAAG,MAAM,CACtB,CAAC,EACN,CAAC,CAEV,CAAC,CAED,cAAe,CAAAL,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
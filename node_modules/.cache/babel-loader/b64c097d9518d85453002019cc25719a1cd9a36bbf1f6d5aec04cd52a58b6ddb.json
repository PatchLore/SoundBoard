{"ast":null,"code":"import _objectSpread from\"/Users/allendunn/Documents/Stream/stream-soundboard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Analytics service for tracking real user performance data\nclass AnalyticsService{constructor(){this.sessionId=void 0;this.isProduction=void 0;this.analyticsEndpoint=void 0;this.events=[];this.performanceMetrics={};this.sessionId=this.generateSessionId();this.isProduction=process.env.NODE_ENV==='production';this.analyticsEndpoint=process.env.REACT_APP_ANALYTICS_ENDPOINT||'/api/analytics';// Only track in production\nif(this.isProduction){this.initializePerformanceTracking();}}generateSessionId(){return'session_'+Date.now()+'_'+Math.random().toString(36).substr(2,9);}initializePerformanceTracking(){// Track navigation timing\nif(performance.timing){this.performanceMetrics.navigationStart=performance.timing.navigationStart;this.performanceMetrics.loadEventEnd=performance.timing.loadEventEnd;this.performanceMetrics.domContentLoadedEventEnd=performance.timing.domContentLoadedEventEnd;}// Track modern performance metrics\nif('getEntriesByType'in performance){const navigationEntries=performance.getEntriesByType('navigation');if(navigationEntries.length>0){const navEntry=navigationEntries[0];this.performanceMetrics.timeToInteractive=navEntry.domInteractive;this.performanceMetrics.firstContentfulPaint=navEntry.firstContentfulPaint||0;}}// Track device capabilities\nthis.performanceMetrics.userAgent=navigator.userAgent;this.performanceMetrics.platform=navigator.platform;this.performanceMetrics.hardwareConcurrency=navigator.hardwareConcurrency||0;this.performanceMetrics.deviceMemory=navigator.deviceMemory||0;// Track memory usage\nif(performance.memory){this.performanceMetrics.memoryUsage=performance.memory.usedJSHeapSize;this.performanceMetrics.memoryLimit=performance.memory.jsHeapSizeLimit;}}trackAppLoad(metrics){if(!this.isProduction){console.log('ðŸ“Š Analytics (dev): App load tracked',metrics);return;}const event={event:'app_load',timestamp:Date.now(),data:_objectSpread(_objectSpread(_objectSpread({},this.performanceMetrics),metrics),{},{sessionId:this.sessionId}),sessionId:this.sessionId};this.events.push(event);this.sendAnalytics(event);}trackUserInteraction(interaction,data){if(!this.isProduction){console.log('ðŸ“Š Analytics (dev): User interaction tracked',{interaction,data});return;}const event={event:'user_interaction',timestamp:Date.now(),data:_objectSpread({interaction,data,sessionId:this.sessionId},this.performanceMetrics),sessionId:this.sessionId};this.events.push(event);this.sendAnalytics(event);}trackPerformanceIssue(issue){if(!this.isProduction){console.log('ðŸ“Š Analytics (dev): Performance issue tracked',issue);return;}const event={event:'performance_issue',timestamp:Date.now(),data:_objectSpread(_objectSpread({},issue),{},{sessionId:this.sessionId},this.performanceMetrics),sessionId:this.sessionId};this.events.push(event);this.sendAnalytics(event);}trackError(error){if(!this.isProduction){console.log('ðŸ“Š Analytics (dev): Error tracked',error);return;}const event={event:'error',timestamp:Date.now(),data:_objectSpread(_objectSpread({},error),{},{sessionId:this.sessionId},this.performanceMetrics),sessionId:this.sessionId};this.events.push(event);this.sendAnalytics(event);}async sendAnalytics(event){try{// Send to your analytics endpoint\nawait fetch(this.analyticsEndpoint,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(event)});// Also send to Google Analytics if configured\nif(typeof window.gtag!=='undefined'){window.gtag('event',event.event,{event_category:'performance',event_label:event.sessionId,value:event.timestamp,custom_parameters:event.data});}// Send to console in development\nif(!this.isProduction){console.log('ðŸ“Š Analytics sent:',event);}}catch(error){// Don't let analytics errors break the app\nconsole.warn('Analytics send failed:',error);}}getSessionId(){return this.sessionId;}getEvents(){return this.events;}flushEvents(){// Send all pending events\nthis.events.forEach(event=>this.sendAnalytics(event));this.events=[];}}// Create singleton instance\nexport const analyticsService=new AnalyticsService();// Export for use in components\nexport default analyticsService;","map":{"version":3,"names":["AnalyticsService","constructor","sessionId","isProduction","analyticsEndpoint","events","performanceMetrics","generateSessionId","process","env","NODE_ENV","REACT_APP_ANALYTICS_ENDPOINT","initializePerformanceTracking","Date","now","Math","random","toString","substr","performance","timing","navigationStart","loadEventEnd","domContentLoadedEventEnd","navigationEntries","getEntriesByType","length","navEntry","timeToInteractive","domInteractive","firstContentfulPaint","userAgent","navigator","platform","hardwareConcurrency","deviceMemory","memory","memoryUsage","usedJSHeapSize","memoryLimit","jsHeapSizeLimit","trackAppLoad","metrics","console","log","event","timestamp","data","_objectSpread","push","sendAnalytics","trackUserInteraction","interaction","trackPerformanceIssue","issue","trackError","error","fetch","method","headers","body","JSON","stringify","window","gtag","event_category","event_label","value","custom_parameters","warn","getSessionId","getEvents","flushEvents","forEach","analyticsService"],"sources":["/Users/allendunn/Documents/Stream/stream-soundboard/src/services/analyticsService.ts"],"sourcesContent":["// Analytics service for tracking real user performance data\nexport interface PerformanceMetrics {\n  // Navigation timing\n  navigationStart: number;\n  loadEventEnd: number;\n  domContentLoadedEventEnd: number;\n  \n  // Resource loading\n  jsonLoadTime: number;\n  trackProcessingTime: number;\n  totalLoadTime: number;\n  \n  // Memory usage\n  memoryUsage: number;\n  memoryLimit: number;\n  \n  // User interaction\n  timeToInteractive: number;\n  firstContentfulPaint: number;\n  \n  // Device info\n  userAgent: string;\n  platform: string;\n  hardwareConcurrency: number;\n  deviceMemory: number;\n  \n  // App-specific metrics\n  tracksLoaded: number;\n  totalTracks: number;\n  loadSuccess: boolean;\n  errorType?: string;\n}\n\nexport interface AnalyticsEvent {\n  event: string;\n  timestamp: number;\n  data: any;\n  sessionId: string;\n}\n\nclass AnalyticsService {\n  private sessionId: string;\n  private isProduction: boolean;\n  private analyticsEndpoint: string;\n  private events: AnalyticsEvent[] = [];\n  private performanceMetrics: Partial<PerformanceMetrics> = {};\n\n  constructor() {\n    this.sessionId = this.generateSessionId();\n    this.isProduction = process.env.NODE_ENV === 'production';\n    this.analyticsEndpoint = process.env.REACT_APP_ANALYTICS_ENDPOINT || '/api/analytics';\n    \n    // Only track in production\n    if (this.isProduction) {\n      this.initializePerformanceTracking();\n    }\n  }\n\n  private generateSessionId(): string {\n    return 'session_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n  }\n\n  private initializePerformanceTracking() {\n    // Track navigation timing\n    if (performance.timing) {\n      this.performanceMetrics.navigationStart = performance.timing.navigationStart;\n      this.performanceMetrics.loadEventEnd = performance.timing.loadEventEnd;\n      this.performanceMetrics.domContentLoadedEventEnd = performance.timing.domContentLoadedEventEnd;\n    }\n\n    // Track modern performance metrics\n    if ('getEntriesByType' in performance) {\n      const navigationEntries = performance.getEntriesByType('navigation');\n      if (navigationEntries.length > 0) {\n        const navEntry = navigationEntries[0] as PerformanceNavigationTiming;\n        this.performanceMetrics.timeToInteractive = navEntry.domInteractive;\n        this.performanceMetrics.firstContentfulPaint = (navEntry as any).firstContentfulPaint || 0;\n      }\n    }\n\n    // Track device capabilities\n    this.performanceMetrics.userAgent = navigator.userAgent;\n    this.performanceMetrics.platform = navigator.platform;\n    this.performanceMetrics.hardwareConcurrency = navigator.hardwareConcurrency || 0;\n    this.performanceMetrics.deviceMemory = (navigator as any).deviceMemory || 0;\n\n    // Track memory usage\n    if ((performance as any).memory) {\n      this.performanceMetrics.memoryUsage = (performance as any).memory.usedJSHeapSize;\n      this.performanceMetrics.memoryLimit = (performance as any).memory.jsHeapSizeLimit;\n    }\n  }\n\n  public trackAppLoad(metrics: {\n    jsonLoadTime: number;\n    trackProcessingTime: number;\n    totalLoadTime: number;\n    tracksLoaded: number;\n    totalTracks: number;\n    loadSuccess: boolean;\n    errorType?: string;\n  }) {\n    if (!this.isProduction) {\n      console.log('ðŸ“Š Analytics (dev): App load tracked', metrics);\n      return;\n    }\n\n    const event: AnalyticsEvent = {\n      event: 'app_load',\n      timestamp: Date.now(),\n      data: {\n        ...this.performanceMetrics,\n        ...metrics,\n        sessionId: this.sessionId\n      },\n      sessionId: this.sessionId\n    };\n\n    this.events.push(event);\n    this.sendAnalytics(event);\n  }\n\n  public trackUserInteraction(interaction: string, data?: any) {\n    if (!this.isProduction) {\n      console.log('ðŸ“Š Analytics (dev): User interaction tracked', { interaction, data });\n      return;\n    }\n\n    const event: AnalyticsEvent = {\n      event: 'user_interaction',\n      timestamp: Date.now(),\n      data: {\n        interaction,\n        data,\n        sessionId: this.sessionId,\n        ...this.performanceMetrics\n      },\n      sessionId: this.sessionId\n    };\n\n    this.events.push(event);\n    this.sendAnalytics(event);\n  }\n\n  public trackPerformanceIssue(issue: {\n    type: 'slow_loading' | 'memory_high' | 'timeout' | 'error';\n    details: string;\n    metrics: any;\n  }) {\n    if (!this.isProduction) {\n      console.log('ðŸ“Š Analytics (dev): Performance issue tracked', issue);\n      return;\n    }\n\n    const event: AnalyticsEvent = {\n      event: 'performance_issue',\n      timestamp: Date.now(),\n      data: {\n        ...issue,\n        sessionId: this.sessionId,\n        ...this.performanceMetrics\n      },\n      sessionId: this.sessionId\n    };\n\n    this.events.push(event);\n    this.sendAnalytics(event);\n  }\n\n  public trackError(error: {\n    type: string;\n    message: string;\n    stack?: string;\n    context?: any;\n  }) {\n    if (!this.isProduction) {\n      console.log('ðŸ“Š Analytics (dev): Error tracked', error);\n      return;\n    }\n\n    const event: AnalyticsEvent = {\n      event: 'error',\n      timestamp: Date.now(),\n      data: {\n        ...error,\n        sessionId: this.sessionId,\n        ...this.performanceMetrics\n      },\n      sessionId: this.sessionId\n    };\n\n    this.events.push(event);\n    this.sendAnalytics(event);\n  }\n\n  private async sendAnalytics(event: AnalyticsEvent) {\n    try {\n      // Send to your analytics endpoint\n      await fetch(this.analyticsEndpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(event),\n      });\n\n      // Also send to Google Analytics if configured\n      if (typeof (window as any).gtag !== 'undefined') {\n        (window as any).gtag('event', event.event, {\n          event_category: 'performance',\n          event_label: event.sessionId,\n          value: event.timestamp,\n          custom_parameters: event.data\n        });\n      }\n\n      // Send to console in development\n      if (!this.isProduction) {\n        console.log('ðŸ“Š Analytics sent:', event);\n      }\n\n    } catch (error) {\n      // Don't let analytics errors break the app\n      console.warn('Analytics send failed:', error);\n    }\n  }\n\n  public getSessionId(): string {\n    return this.sessionId;\n  }\n\n  public getEvents(): AnalyticsEvent[] {\n    return this.events;\n  }\n\n  public flushEvents() {\n    // Send all pending events\n    this.events.forEach(event => this.sendAnalytics(event));\n    this.events = [];\n  }\n}\n\n// Create singleton instance\nexport const analyticsService = new AnalyticsService();\n\n// Export for use in components\nexport default analyticsService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from\"/Users/allendunn/Documents/Stream/stream-soundboard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";class MusicService{constructor(){this.config={demoMode:true,maxUploadSize:50,// 50MB max file size\nallowedFormats:['mp3','wav','ogg','m4a']};// Auto-detect demo mode - no API keys needed\nthis.config.demoMode=true;}/**\n   * Check if the service is in demo mode\n   */isDemoMode(){return this.config.demoMode;}/**\n   * Get demo mode status message\n   */getDemoModeMessage(){return this.isDemoMode()?'ðŸŽµ Demo Mode: Manual uploads only. Add API keys for AI generation.':'ðŸ¤– Live Mode: AI music generation enabled.';}/**\n   * Validate uploaded file\n   */validateFile(file){var _file$name$split$pop;const maxSizeBytes=this.config.maxUploadSize*1024*1024;if(file.size>maxSizeBytes){return{valid:false,error:\"File size exceeds \".concat(this.config.maxUploadSize,\"MB limit\")};}const extension=(_file$name$split$pop=file.name.split('.').pop())===null||_file$name$split$pop===void 0?void 0:_file$name$split$pop.toLowerCase();if(!extension||!this.config.allowedFormats.includes(extension)){return{valid:false,error:\"File format not supported. Allowed: \".concat(this.config.allowedFormats.join(', '))};}return{valid:true};}/**\n   * Process uploaded file and create track metadata\n   */async processUpload(file,metadata){var _metadata$streamSafe,_metadata$loopFriendl,_metadata$hasIntro,_metadata$hasOutro,_metadata$dmcaSafe;const validation=this.validateFile(file);if(!validation.valid){throw new Error(validation.error);}// Create a unique ID for the track\nconst trackId=\"manual_\".concat(Date.now(),\"_\").concat(Math.random().toString(36).substr(2,9));// Create the track object with all required properties\nconst track=_objectSpread({id:trackId,title:metadata.title||file.name.replace(/\\.[^/.]+$/,''),artist:metadata.artist||'Manual Upload',duration:metadata.duration||0,// Will be calculated when audio loads\ncategory:metadata.category||'chill-gaming',subcategory:metadata.subcategory||'manual',mood:metadata.mood||'chill',energy:metadata.energy||2,audioUrl:URL.createObjectURL(file),tags:metadata.tags||['manual','upload'],streamSafe:(_metadata$streamSafe=metadata.streamSafe)!==null&&_metadata$streamSafe!==void 0?_metadata$streamSafe:true,loopFriendly:(_metadata$loopFriendl=metadata.loopFriendly)!==null&&_metadata$loopFriendl!==void 0?_metadata$loopFriendl:true,hasIntro:(_metadata$hasIntro=metadata.hasIntro)!==null&&_metadata$hasIntro!==void 0?_metadata$hasIntro:false,hasOutro:(_metadata$hasOutro=metadata.hasOutro)!==null&&_metadata$hasOutro!==void 0?_metadata$hasOutro:false,dmcaSafe:(_metadata$dmcaSafe=metadata.dmcaSafe)!==null&&_metadata$dmcaSafe!==void 0?_metadata$dmcaSafe:true,approved:true,featured:false,uploadDate:new Date().toISOString(),uploadedBy:metadata.uploadedBy||'user'},metadata);return track;}/**\n   * Get available categories for manual uploads\n   */getUploadCategories(){return['chill-gaming','gaming-action','stream-starting','hype-raid','break-brb','talk-show','intro-outro','boss-battle','intermission','background-chat'];}/**\n   * Get category display names\n   */getCategoryDisplayName(categoryId){const categoryMap={'chill-gaming':'Chill Gaming','gaming-action':'Gaming Action','stream-starting':'Stream Starting','hype-raid':'Hype Raid','break-brb':'Break/BRB','talk-show':'Talk Show','intro-outro':'Intro/Outro','boss-battle':'Boss Battle','intermission':'Intermission','background-chat':'Background Chat'};return categoryMap[categoryId]||categoryId;}/**\n   * Get service configuration\n   */getConfig(){return _objectSpread({},this.config);}/**\n   * Update service configuration\n   */updateConfig(newConfig){this.config=_objectSpread(_objectSpread({},this.config),newConfig);}/**\n   * Get demo tracks for testing\n   */getDemoTracks(){return[{id:'demo_1',title:'Demo Chill Track',artist:'Demo Artist',duration:180,category:'chill-gaming',subcategory:'demo',mood:'chill',energy:2,audioUrl:'/audio/demo-chill.mp3',tags:['demo','chill','gaming'],streamSafe:true,loopFriendly:true,hasIntro:false,hasOutro:false,dmcaSafe:true,approved:true,featured:false,uploadDate:new Date().toISOString(),uploadedBy:'system'},{id:'demo_2',title:'Demo Action Track',artist:'Demo Artist',duration:120,category:'gaming-action',subcategory:'demo',mood:'energetic',energy:4,audioUrl:'/audio/demo-action.mp3',tags:['demo','action','gaming'],streamSafe:true,loopFriendly:true,hasIntro:false,hasOutro:false,dmcaSafe:true,approved:true,featured:false,uploadDate:new Date().toISOString(),uploadedBy:'system'}];}/**\n   * Check if AI generation is available\n   */canGenerateAI(){return!this.isDemoMode();}/**\n   * Get AI generation status\n   */getAIGenerationStatus(){if(this.canGenerateAI()){return{available:true,message:'AI music generation is available'};}else{return{available:false,message:'AI generation requires API keys. Currently in demo mode.'};}}}// Create and export singleton instance\nconst musicService=new MusicService();export default musicService;","map":{"version":3,"names":["MusicService","constructor","config","demoMode","maxUploadSize","allowedFormats","isDemoMode","getDemoModeMessage","validateFile","file","_file$name$split$pop","maxSizeBytes","size","valid","error","concat","extension","name","split","pop","toLowerCase","includes","join","processUpload","metadata","_metadata$streamSafe","_metadata$loopFriendl","_metadata$hasIntro","_metadata$hasOutro","_metadata$dmcaSafe","validation","Error","trackId","Date","now","Math","random","toString","substr","track","_objectSpread","id","title","replace","artist","duration","category","subcategory","mood","energy","audioUrl","URL","createObjectURL","tags","streamSafe","loopFriendly","hasIntro","hasOutro","dmcaSafe","approved","featured","uploadDate","toISOString","uploadedBy","getUploadCategories","getCategoryDisplayName","categoryId","categoryMap","getConfig","updateConfig","newConfig","getDemoTracks","canGenerateAI","getAIGenerationStatus","available","message","musicService"],"sources":["/Users/allendunn/Documents/Stream/stream-soundboard/src/services/musicService.ts"],"sourcesContent":["import { Track } from '../types/track';\n\nexport interface MusicGenerationOptions {\n  category: string;\n  count: number;\n  duration?: number;\n}\n\nexport interface MusicServiceConfig {\n  demoMode: boolean;\n  maxUploadSize: number; // in MB\n  allowedFormats: string[];\n}\n\nclass MusicService {\n  private config: MusicServiceConfig = {\n    demoMode: true,\n    maxUploadSize: 50, // 50MB max file size\n    allowedFormats: ['mp3', 'wav', 'ogg', 'm4a']\n  };\n\n  constructor() {\n    // Auto-detect demo mode - no API keys needed\n    this.config.demoMode = true;\n  }\n\n  /**\n   * Check if the service is in demo mode\n   */\n  isDemoMode(): boolean {\n    return this.config.demoMode;\n  }\n\n  /**\n   * Get demo mode status message\n   */\n  getDemoModeMessage(): string {\n    return this.isDemoMode() \n      ? 'ðŸŽµ Demo Mode: Manual uploads only. Add API keys for AI generation.'\n      : 'ðŸ¤– Live Mode: AI music generation enabled.';\n  }\n\n  /**\n   * Validate uploaded file\n   */\n  validateFile(file: File): { valid: boolean; error?: string } {\n    const maxSizeBytes = this.config.maxUploadSize * 1024 * 1024;\n    \n    if (file.size > maxSizeBytes) {\n      return { \n        valid: false, \n        error: `File size exceeds ${this.config.maxUploadSize}MB limit` \n      };\n    }\n\n    const extension = file.name.split('.').pop()?.toLowerCase();\n    if (!extension || !this.config.allowedFormats.includes(extension)) {\n      return { \n        valid: false, \n        error: `File format not supported. Allowed: ${this.config.allowedFormats.join(', ')}` \n      };\n    }\n\n    return { valid: true };\n  }\n\n  /**\n   * Process uploaded file and create track metadata\n   */\n  async processUpload(file: File, metadata: Partial<Track>): Promise<Track> {\n    const validation = this.validateFile(file);\n    if (!validation.valid) {\n      throw new Error(validation.error);\n    }\n\n    // Create a unique ID for the track\n    const trackId = `manual_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    \n    // Create the track object with all required properties\n    const track: Track = {\n      id: trackId,\n      title: metadata.title || file.name.replace(/\\.[^/.]+$/, ''),\n      artist: metadata.artist || 'Manual Upload',\n      duration: metadata.duration || 0, // Will be calculated when audio loads\n      category: metadata.category || 'chill-gaming',\n      subcategory: metadata.subcategory || 'manual',\n      mood: metadata.mood || 'chill',\n      energy: metadata.energy || 2,\n      audioUrl: URL.createObjectURL(file),\n      tags: metadata.tags || ['manual', 'upload'],\n      streamSafe: metadata.streamSafe ?? true,\n      loopFriendly: metadata.loopFriendly ?? true,\n      hasIntro: metadata.hasIntro ?? false,\n      hasOutro: metadata.hasOutro ?? false,\n      dmcaSafe: metadata.dmcaSafe ?? true,\n      approved: true,\n      featured: false,\n      uploadDate: new Date().toISOString(),\n      uploadedBy: metadata.uploadedBy || 'user',\n      ...metadata\n    };\n\n    return track;\n  }\n\n  /**\n   * Get available categories for manual uploads\n   */\n  getUploadCategories(): string[] {\n    return [\n      'chill-gaming',\n      'gaming-action', \n      'stream-starting',\n      'hype-raid',\n      'break-brb',\n      'talk-show',\n      'intro-outro',\n      'boss-battle',\n      'intermission',\n      'background-chat'\n    ];\n  }\n\n  /**\n   * Get category display names\n   */\n  getCategoryDisplayName(categoryId: string): string {\n    const categoryMap: Record<string, string> = {\n      'chill-gaming': 'Chill Gaming',\n      'gaming-action': 'Gaming Action',\n      'stream-starting': 'Stream Starting',\n      'hype-raid': 'Hype Raid',\n      'break-brb': 'Break/BRB',\n      'talk-show': 'Talk Show',\n      'intro-outro': 'Intro/Outro',\n      'boss-battle': 'Boss Battle',\n      'intermission': 'Intermission',\n      'background-chat': 'Background Chat'\n    };\n\n    return categoryMap[categoryId] || categoryId;\n  }\n\n  /**\n   * Get service configuration\n   */\n  getConfig(): MusicServiceConfig {\n    return { ...this.config };\n  }\n\n  /**\n   * Update service configuration\n   */\n  updateConfig(newConfig: Partial<MusicServiceConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n  }\n\n  /**\n   * Get demo tracks for testing\n   */\n  getDemoTracks(): Track[] {\n    return [\n      {\n        id: 'demo_1',\n        title: 'Demo Chill Track',\n        artist: 'Demo Artist',\n        duration: 180,\n        category: 'chill-gaming',\n        subcategory: 'demo',\n        mood: 'chill',\n        energy: 2,\n        audioUrl: '/audio/demo-chill.mp3',\n        tags: ['demo', 'chill', 'gaming'],\n        streamSafe: true,\n        loopFriendly: true,\n        hasIntro: false,\n        hasOutro: false,\n        dmcaSafe: true,\n        approved: true,\n        featured: false,\n        uploadDate: new Date().toISOString(),\n        uploadedBy: 'system'\n      },\n      {\n        id: 'demo_2',\n        title: 'Demo Action Track',\n        artist: 'Demo Artist',\n        duration: 120,\n        category: 'gaming-action',\n        subcategory: 'demo',\n        mood: 'energetic',\n        energy: 4,\n        audioUrl: '/audio/demo-action.mp3',\n        tags: ['demo', 'action', 'gaming'],\n        streamSafe: true,\n        loopFriendly: true,\n        hasIntro: false,\n        hasOutro: false,\n        dmcaSafe: true,\n        approved: true,\n        featured: false,\n        uploadDate: new Date().toISOString(),\n        uploadedBy: 'system'\n      }\n    ];\n  }\n\n  /**\n   * Check if AI generation is available\n   */\n  canGenerateAI(): boolean {\n    return !this.isDemoMode();\n  }\n\n  /**\n   * Get AI generation status\n   */\n  getAIGenerationStatus(): { available: boolean; message: string } {\n    if (this.canGenerateAI()) {\n      return {\n        available: true,\n        message: 'AI music generation is available'\n      };\n    } else {\n      return {\n        available: false,\n        message: 'AI generation requires API keys. Currently in demo mode.'\n      };\n    }\n  }\n}\n\n// Create and export singleton instance\nconst musicService = new MusicService();\nexport default musicService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export const STREAMING_CATEGORIES = [{\n  id: 'stream-starting',\n  name: 'Stream Starting Soon',\n  description: 'Professional intro music for stream openings',\n  color: '#ff6b6b',\n  icon: '🎬',\n  trackCount: 0\n}, {\n  id: 'chill-gaming',\n  name: 'Chill Gaming',\n  description: 'Background music for relaxed gameplay',\n  color: '#4ecdc4',\n  icon: '🎮',\n  trackCount: 0\n}, {\n  id: 'gaming-action',\n  name: 'Gaming Action',\n  description: 'High-energy music for intense gameplay',\n  color: '#45b7d1',\n  icon: '⚔️',\n  trackCount: 0\n}, {\n  id: 'hype-raid',\n  name: 'Hype Raid',\n  description: 'Pump-up music for exciting moments',\n  color: '#f9ca24',\n  icon: '🔥',\n  trackCount: 0\n}, {\n  id: 'break-brb',\n  name: 'Break/BRB',\n  description: 'Pleasant waiting music for breaks',\n  color: '#6c5ce7',\n  icon: '⏸️',\n  trackCount: 0\n}, {\n  id: 'talk-show',\n  name: 'Talk Show',\n  description: 'Background music for conversations',\n  color: '#a29bfe',\n  icon: '🎙️',\n  trackCount: 0\n}, {\n  id: 'intro-outro',\n  name: 'Intro/Outro',\n  description: 'Short tracks for beginnings and endings',\n  color: '#fd79a8',\n  icon: '🎵',\n  trackCount: 0\n}, {\n  id: 'boss-battle',\n  name: 'Boss Battle',\n  description: 'Epic music for challenging moments',\n  color: '#e17055',\n  icon: '🐉',\n  trackCount: 0\n}, {\n  id: 'intermission',\n  name: 'Intermission',\n  description: 'Transitional music between segments',\n  color: '#00b894',\n  icon: '🔄',\n  trackCount: 0\n}, {\n  id: 'background-chat',\n  name: 'Background Chat',\n  description: 'Subtle music for viewer interaction',\n  color: '#fdcb6e',\n  icon: '💬',\n  trackCount: 0\n}];\nexport const getCategoryById = id => {\n  return STREAMING_CATEGORIES.find(cat => cat.id === id);\n};\nexport const getCategoryDisplayName = categoryId => {\n  const category = getCategoryById(categoryId);\n  return (category === null || category === void 0 ? void 0 : category.name) || categoryId;\n};\nexport const getCategoryColor = categoryId => {\n  const category = getCategoryById(categoryId);\n  return (category === null || category === void 0 ? void 0 : category.color) || '#6b7280';\n};\nexport const getCategoryIcon = categoryId => {\n  const category = getCategoryById(categoryId);\n  return (category === null || category === void 0 ? void 0 : category.icon) || '🎵';\n};\nexport const getCategoryDescription = categoryId => {\n  const category = getCategoryById(categoryId);\n  return (category === null || category === void 0 ? void 0 : category.description) || '';\n};\nexport const updateCategoryTrackCount = (categoryId, count) => {\n  const category = STREAMING_CATEGORIES.find(cat => cat.id === categoryId);\n  if (category) {\n    category.trackCount = count;\n  }\n};\nexport const getTotalTrackCount = () => {\n  return STREAMING_CATEGORIES.reduce((total, cat) => total + cat.trackCount, 0);\n};","map":{"version":3,"names":["STREAMING_CATEGORIES","id","name","description","color","icon","trackCount","getCategoryById","find","cat","getCategoryDisplayName","categoryId","category","getCategoryColor","getCategoryIcon","getCategoryDescription","updateCategoryTrackCount","count","getTotalTrackCount","reduce","total"],"sources":["/Users/allendunn/Documents/Stream/stream-soundboard/src/data/categories.ts"],"sourcesContent":["import { Category } from '../types/track';\n\nexport const STREAMING_CATEGORIES: Category[] = [\n  {\n    id: 'stream-starting',\n    name: 'Stream Starting Soon',\n    description: 'Professional intro music for stream openings',\n    color: '#ff6b6b',\n    icon: '🎬',\n    trackCount: 0\n  },\n  {\n    id: 'chill-gaming',\n    name: 'Chill Gaming',\n    description: 'Background music for relaxed gameplay',\n    color: '#4ecdc4',\n    icon: '🎮',\n    trackCount: 0\n  },\n  {\n    id: 'gaming-action',\n    name: 'Gaming Action',\n    description: 'High-energy music for intense gameplay',\n    color: '#45b7d1',\n    icon: '⚔️',\n    trackCount: 0\n  },\n  {\n    id: 'hype-raid',\n    name: 'Hype Raid',\n    description: 'Pump-up music for exciting moments',\n    color: '#f9ca24',\n    icon: '🔥',\n    trackCount: 0\n  },\n  {\n    id: 'break-brb',\n    name: 'Break/BRB',\n    description: 'Pleasant waiting music for breaks',\n    color: '#6c5ce7',\n    icon: '⏸️',\n    trackCount: 0\n  },\n  {\n    id: 'talk-show',\n    name: 'Talk Show',\n    description: 'Background music for conversations',\n    color: '#a29bfe',\n    icon: '🎙️',\n    trackCount: 0\n  },\n  {\n    id: 'intro-outro',\n    name: 'Intro/Outro',\n    description: 'Short tracks for beginnings and endings',\n    color: '#fd79a8',\n    icon: '🎵',\n    trackCount: 0\n  },\n  {\n    id: 'boss-battle',\n    name: 'Boss Battle',\n    description: 'Epic music for challenging moments',\n    color: '#e17055',\n    icon: '🐉',\n    trackCount: 0\n  },\n  {\n    id: 'intermission',\n    name: 'Intermission',\n    description: 'Transitional music between segments',\n    color: '#00b894',\n    icon: '🔄',\n    trackCount: 0\n  },\n  {\n    id: 'background-chat',\n    name: 'Background Chat',\n    description: 'Subtle music for viewer interaction',\n    color: '#fdcb6e',\n    icon: '💬',\n    trackCount: 0\n  }\n];\n\nexport const getCategoryById = (id: string): Category | undefined => {\n  return STREAMING_CATEGORIES.find(cat => cat.id === id);\n};\n\nexport const getCategoryDisplayName = (categoryId: string): string => {\n  const category = getCategoryById(categoryId);\n  return category?.name || categoryId;\n};\n\nexport const getCategoryColor = (categoryId: string): string => {\n  const category = getCategoryById(categoryId);\n  return category?.color || '#6b7280';\n};\n\nexport const getCategoryIcon = (categoryId: string): string => {\n  const category = getCategoryById(categoryId);\n  return category?.icon || '🎵';\n};\n\nexport const getCategoryDescription = (categoryId: string): string => {\n  const category = getCategoryById(categoryId);\n  return category?.description || '';\n};\n\nexport const updateCategoryTrackCount = (categoryId: string, count: number) => {\n  const category = STREAMING_CATEGORIES.find(cat => cat.id === categoryId);\n  if (category) {\n    category.trackCount = count;\n  }\n};\n\nexport const getTotalTrackCount = (): number => {\n  return STREAMING_CATEGORIES.reduce((total, cat) => total + cat.trackCount, 0);\n};\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}